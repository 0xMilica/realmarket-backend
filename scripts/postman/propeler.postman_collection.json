{
	"info": {
		"_postman_id": "e4230922-907e-4075-b767-7d66c60a1dbc",
		"name": "propeler",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "companies",
			"item": [
				{
					"name": "docs",
					"item": [
						{
							"name": "/documents/{{document_id}}",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accessLevel\": \"PUBLIC\",\r\n  \"title\": \"FIRSTDOCUMENTMODIFIED\",\r\n  \"type\": \"BUSINESS_PLAN\",\r\n  \"url\": \"ZPQADB52R24TBD3ECEI2Z3YZKE5WZ4BO.txt\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/companies/mine/documents/{{document_id}}",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"mine",
										"documents",
										"{{document_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accessLevel\": \"PLATFORM_ADMINS\",\r\n  \"title\": \"FIRSTDOCUMENT\",\r\n  \"type\": \"APR_PAPER\",\r\n  \"url\": \"ZPQADB52R24TBD3ECEI2Z3YZKE5WZ4BO.txt\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/companies/{{company_id}}/documents",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"{{company_id}}",
										"documents"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents/{{document_id}}",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{server_ip}}/api/companies/mine/documents/{{document_id}}",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"mine",
										"documents",
										"{{document_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/companies/{{company_id}}/documents",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"{{company_id}}",
										"documents"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents/types",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/companies/documents/types",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"documents",
										"types"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "shareholders",
					"item": [
						{
							"name": "pictures",
							"item": [
								{
									"name": "/companies/mine/shareholders/{{shareholder_id}}/picture",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{server_ip}}/api/companies/mine/shareholders/{{shareholder_id}}/picture",
											"host": [
												"{{server_ip}}"
											],
											"path": [
												"api",
												"companies",
												"mine",
												"shareholders",
												"{{shareholder_id}}",
												"picture"
											]
										}
									},
									"response": []
								},
								{
									"name": "/companies/mine/shareholders/{{shareholder_id}}/picture",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{server_ip}}/api/companies/mine/shareholders/{{shareholder_id}}/picture",
											"host": [
												"{{server_ip}}"
											],
											"path": [
												"api",
												"companies",
												"mine",
												"shareholders",
												"{{shareholder_id}}",
												"picture"
											]
										}
									},
									"response": []
								},
								{
									"name": "/companies/{{company_id}}/shareholders/{{shareholder_id}}/picture",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server_ip}}/api/companies/{{company_id}}/shareholders/{{shareholder_id}}/picture",
											"host": [
												"{{server_ip}}"
											],
											"path": [
												"api",
												"companies",
												"{{company_id}}",
												"shareholders",
												"{{shareholder_id}}",
												"picture"
											]
										}
									},
									"response": []
								},
								{
									"name": "/companies/mine/shareholders/{{shareholder_id}}/picture",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "picture",
													"type": "file",
													"src": "/C:/Users/raso/Pictures/dsqdt1-183e93e8-5cfe-496e-a78e-666051e64da2 (2).png"
												}
											]
										},
										"url": {
											"raw": "{{server_ip}}/api/companies/mine/shareholders/{{shareholder_id}}/picture",
											"host": [
												"{{server_ip}}"
											],
											"path": [
												"api",
												"companies",
												"mine",
												"shareholders",
												"{{shareholder_id}}",
												"picture"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "/companies/mine/shareholders",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/companies/mine/shareholders",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"mine",
										"shareholders"
									]
								}
							},
							"response": []
						},
						{
							"name": "/companies/{{company_id}}/shareholders",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/companies/{{company_id}}/shareholders",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"{{company_id}}",
										"shareholders"
									]
								}
							},
							"response": []
						},
						{
							"name": "/companies/mine/shareholders",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"isAnonymous\": false,\n\t\"name\": \"Митар Ћирић\",\n\t\"location\": \"Шатровци\",\n\t\"investedAmount\": 123456789,\n\t\"description\": \"Шатро фићфирић\",\n\t\"twitterUrl\": \"https://twitter.com/twichtwichtwich\",\n\t\"linkedinUrl\": \"https://linkedin.com/linklinklinkininin\",\n\t\"facebookUrl\": \"https://facebook.com/facefacefacekacekacekace\",\n\t\"customProfileUrl\": \"https://myspace.com/kojosovocudokoristikojosovocudokoristikojosovocudokoristi\",\n\t\"isCompany\": false,\n\t\"companyIdentificationNumber\": null,\n\t\"orderNumber\": 1\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/companies/mine/shareholders",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"mine",
										"shareholders"
									]
								}
							},
							"response": []
						},
						{
							"name": "/companies/mine/shareholders",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[1,3,5,2,4]"
								},
								"url": {
									"raw": "{{server_ip}}/api/companies/mine/shareholders",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"mine",
										"shareholders"
									]
								}
							},
							"response": []
						},
						{
							"name": "/companies/mine/shareholders/{{shareholder_id}}",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"isAnonymous\": false,\n\t\"name\": \"Митар Ћирић\",\n\t\"location\": \"Шатровци\",\n\t\"investedAmount\": 123456789,\n\t\"description\": \"Шатро фићфирић\",\n\t\"twitterUrl\": \"https://twitter.com/twch\",\n\t\"linkedinUrl\": \"https://linkedin.com/lin\",\n\t\"facebookUrl\": \"https://facebook.com/face\",\n\t\"customProfileUrl\": \"https://myspace.com/kojosovocudokoristi\",\n\t\"isCompany\": false,\n\t\"companyIdentificationNumber\": null,\n\t\"orderNumber\": 1\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/companies/mine/shareholders/{{shareholder_id}}",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"mine",
										"shareholders",
										"{{shareholder_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/companies/mine/shareholders/{{shareholder_id}}",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/companies/mine/shareholders/{{shareholder_id}}",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"companies",
										"mine",
										"shareholders",
										"{{shareholder_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "/companies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"string\",\r\n  \"bankAccount\": \"string\",\r\n  \"city\": \"string\",\r\n  \"companyCategory\": {\r\n    \"id\": 1\r\n  },\r\n  \"county\": \"string\",\r\n  \"featuredImageUrl\": \"string\",\r\n  \"logoUrl\": \"string\",\r\n  \"name\": \"string2\",\r\n  \"taxIdentifier\": \"string\",\r\n  \"companyIdentificationNumber\": \"string\",\r\n  \"website\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/companies",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/companies/mine",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "*/*, application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/companies/mine",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"companies",
								"mine"
							]
						}
					},
					"response": []
				},
				{
					"name": "/companies/{company_id}",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"string\",\r\n  \"bankAccount\": \"string3232\",\r\n  \"companyIdentificationNumber\": \"123412341234\"\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/companies/{{company_id}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"companies",
								"{{company_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/companies/{{company_id}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/companies/{{company_id}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"companies",
								"{{company_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/companies/{{company_id}}/featured_image",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/companies/{{company_id}}/featured_image",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"companies",
								"{{company_id}}",
								"featured_image"
							]
						}
					},
					"response": []
				},
				{
					"name": "/companies/{{company_id}}/featured_image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "featured image",
									"value": "{{featured image}}",
									"type": "text"
								},
								{
									"key": "picture",
									"value": "{{picture}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{server_ip}}/api/companies/{{company_id}}/featured_image",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"companies",
								"{{company_id}}",
								"featured_image"
							]
						}
					},
					"response": []
				},
				{
					"name": "/companies/{{company_id}}/featured_image",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/companies/{{company_id}}/featured_image",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"companies",
								"{{company_id}}",
								"featured_image"
							]
						}
					},
					"response": []
				},
				{
					"name": "/companies/{{company_id}}/logo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/companies/{{company_id}}/logo",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"companies",
								"{{company_id}}",
								"logo"
							]
						}
					},
					"response": []
				},
				{
					"name": "/companies/{{company_id}}/logo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Logo picture",
									"value": "{{Logo picture}}",
									"type": "text",
									"disabled": true
								},
								{
									"key": "picture",
									"type": "file",
									"src": "/C:/Users/Ognjen Vlajic/Downloads/9M0A8KD21X.txt"
								}
							]
						},
						"url": {
							"raw": "{{server_ip}}/api/companies/{{company_id}}/logo",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"companies",
								"{{company_id}}",
								"logo"
							]
						}
					},
					"response": []
				},
				{
					"name": "/companies/{{company_id}}/logo",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/companies/{{company_id}}/logo",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"companies",
								"{{company_id}}",
								"logo"
							]
						}
					},
					"response": []
				}
			],
			"description": "Folder for companies"
		},
		{
			"name": "campaigns",
			"item": [
				{
					"name": "docs",
					"item": [
						{
							"name": "/documents",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accessLevel\": \"PLATFORM_ADMINS\",\r\n  \"title\": \"FIRSTDOCUMENT\",\r\n  \"type\": \"LEGAL\",\r\n  \"url\": \"ZPQADB52R24TBD3ECEI2Z3YZKE5WZ4BO.txt\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/documents",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"documents"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents/{{document_id}}",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/mine/documents/{{document_id}}",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"mine",
										"documents",
										"{{document_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents/{{document_id}}",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accessLevel\": \"INVESTORS\",\r\n  \"title\": \"FIRSTDOCUMENTMODIFIED\",\r\n  \"type\": \"DUE_DILIGENCE\",\r\n  \"url\": \"N6UYQ3LJYOWZ4H7JHNOHOODVOOBNICEA.txt\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/mine/documents/{{document_id}}",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"mine",
										"documents",
										"{{document_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/documents",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"documents"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documentsByType",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/documentsByType",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"documentsByType"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents/types",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/documents/types",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"documents",
										"types"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents/request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/documents/request",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"documents",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents/requests",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/documents/requests",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"documents",
										"requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents/requests/{{campaignDocumentsAccessRequestId}}/accept",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/documents/requests/{{campaignDocumentsAccessRequestId}}/accept",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"documents",
										"requests",
										"{{campaignDocumentsAccessRequestId}}",
										"accept"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents/requests/{{campaignDocumentsAccessRequestId}}/reject",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/documents/requests/{{campaignDocumentsAccessRequestId}}/reject",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"documents",
										"requests",
										"{{campaignDocumentsAccessRequestId}}",
										"reject"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "team",
					"item": [
						{
							"name": "/team",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "*/*, application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customProfileUrl\": \"string\",\r\n  \"description\": \"string\",\r\n  \"facebookUrl\": \"string\",\r\n  \"investedAmount\": 100,\r\n  \"isAnonymous\": false,\r\n  \"linkedinUrl\": \"string\",\r\n  \"location\": \"string\",\r\n  \"name\": \"string\",\r\n  \"orderNumber\": 1,\r\n  \"photoUrl\": \"string\",\r\n  \"twitterUrl\": \"string\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/team",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"team"
									]
								}
							},
							"response": []
						},
						{
							"name": "/team",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "*/*, application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/team",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"team"
									]
								}
							},
							"response": []
						},
						{
							"name": "/team",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "*/*, application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[ 2, 1,4,6]"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/team",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"team"
									]
								}
							},
							"response": []
						},
						{
							"name": "/team/{{team_member_id}}",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "*/*, application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/team/4",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"team",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "/team/{{team_member_id}}",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "*/*, application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customProfileUrl\": \"str1ing\",\r\n  \"description\": \"string1\",\r\n  \"facebookUrl\": \"strin1g\",\r\n  \"investedAmount\": 0,\r\n  \"isAnonymous\": true,\r\n  \"linkedinUrl\": \"st1ring\",\r\n  \"location\": \"str1ing\",\r\n  \"name\": \"str1ing\",\r\n  \"orderNumber\": 3,\r\n  \"photoUrl\": \"str11ing\",\r\n  \"twitterUrl\": \"st1ring\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/team/2",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"team",
										"2"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d3e3f893-634a-4710-b439-d281e7b870f5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "479892fc-1b14-4b7c-8231-37d363319fc0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "investors",
					"item": [
						{
							"name": "/investors",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customProfileUrl\": \"string\",\r\n  \"description\": \"string\",\r\n  \"facebookUrl\": \"string\",\r\n  \"investedAmount\": 100,\r\n  \"isAnonymous\": false,\r\n  \"linkedinUrl\": \"string\",\r\n  \"location\": \"string\",\r\n  \"name\": \"string\",\r\n  \"orderNumber\": 1,\r\n  \"photoUrl\": \"string\",\r\n  \"twitterUrl\": \"string\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/investors",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"investors"
									]
								}
							},
							"response": []
						},
						{
							"name": "/investors",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/investors",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"investors"
									]
								}
							},
							"response": []
						},
						{
							"name": "/investors",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "*/*, application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[ 2, 1,4,6]"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/investors",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"investors"
									]
								}
							},
							"response": []
						},
						{
							"name": "/investors/{{investor_id}}",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/investors/4",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"investors",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "/investors/{{investor_id}}",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customProfileUrl\": \"str1ing\",\r\n  \"description\": \"string1\",\r\n  \"facebookUrl\": \"strin1g\",\r\n  \"investedAmount\": 0,\r\n  \"isAnonymous\": true,\r\n  \"linkedinUrl\": \"st1ring\",\r\n  \"location\": \"str1ing\",\r\n  \"name\": \"str1ing\",\r\n  \"orderNumber\": 3,\r\n  \"photoUrl\": \"str11ing\",\r\n  \"twitterUrl\": \"st1ring\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/investors/2",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"investors",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "/investors/{{investor_id}}/picture",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "picture",
											"value": "",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/investors/{{investor_id}}/picture",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"investors",
										"{{investor_id}}",
										"picture"
									]
								}
							},
							"response": []
						},
						{
							"name": "/investors/{{investor_id}}/picture",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "*/*, application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/investors/{{investor_id}}/picture",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"investors",
										"{{investor_id}}",
										"picture"
									]
								}
							},
							"response": []
						},
						{
							"name": "/investors/{{investor_id}}/picture",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "*/*, application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/investors/{{investor_id}}/picture",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"investors",
										"{{investor_id}}",
										"picture"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2f604ecd-4d90-49d6-a2f3-82f0355c605e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ea4f13c5-1565-4008-85fd-2fcaa15eb8a3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "topic",
					"item": [
						{
							"name": "{{topic}}/images",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "picture",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "picture",
											"value": "",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/topics/MARKET/images",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"topics",
										"MARKET",
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{topic}}",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"content\":\"content\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/topics/{{campaign_topic}}",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"topics",
										"{{campaign_topic}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update",
					"item": [
						{
							"name": "/updates",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\":\"title\",\r\n  \"content\":\"content\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/updates",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"updates"
									]
								}
							},
							"response": []
						},
						{
							"name": "/updates/{{update_id}}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/updates/{{update_id}}",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"updates",
										"{{update_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/{{campaign_fname}}/updates",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/updates?size=2&page=0",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"{{campaign_fname}}",
										"updates"
									],
									"query": [
										{
											"key": "size",
											"value": "2"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/updates",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/updates?page=0&size=2&filter=active",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"updates"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "2"
										},
										{
											"key": "filter",
											"value": "active"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/updates/{{update_id}}",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"new_title\",\n\t\"content\": \"new_content\"\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/mine/updates/{{update_id}}",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"mine",
										"updates",
										"{{update_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/updates/{{update_id}}/images",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{server_ip}}/api/campaigns/mine/updates/{{update_id}}/images",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"mine",
										"updates",
										"{{update_id}}",
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "/updates/{{update_id}}",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/campaigns/updates/{{update_id}}",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"campaigns",
										"updates",
										"{{update_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "/campaigns",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns?page=0&size=10&state=active",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "state",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"companyId\": 1,\r\n  \"fundingGoals\": 100000,\r\n  \"marketImageUrl\": \"string\",\r\n  \"maxEquityOffered\": 6.4,\r\n  \"minEquityOffered\": 3.2,\r\n  \"name\": \"Test Campaigni\",\r\n  \"timeToRaiseFunds\": 39,\r\n  \"minInvestment\": 600,\r\n  \"urlFriendlyName\": \"test_campaign\",\r\n  \"tagLine\": \"Tagline example\"\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/campaigns",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/active",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "*/*, application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/mine/active",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"mine",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"maxEquityOffered\": 1.2,\r\n  \"minEquityOffered\": 3.4,\r\n  \"timeToRaiseFunds\": 20,\r\n  \"tagLine\": \"Tagline 2.0\"\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}",
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/market_image",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/market_image",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"market_image"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/market_image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "market image",
									"value": "{{market image}}",
									"type": "text",
									"disabled": true
								},
								{
									"key": "picture",
									"value": "",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/market_image",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"market_image"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/market_image",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/market_image",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"market_image"
							]
						}
					},
					"response": []
				},
				{
					"name": "campaigns/mine",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/mine",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"mine"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/public",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/public?page=0&size=10&filter=all",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"public"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "filter",
									"value": "all"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/review",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/review",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"review"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_launch_urlFriendlyName}}/launch",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "*/*, application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_launch_urlFriendlyName}}/launch",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_launch_urlFriendlyName}}",
								"launch"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/convertMoney",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "money",
									"value": "200000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/convertMoney",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"convertMoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/convertPercent",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "percentageOfEquity",
									"value": "6.4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/convertPercentage",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"convertPercentage"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/invest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"amount\":\"50000.2698741\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/invest",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"invest"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/availableEquity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/availableEquity",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"availableEquity"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/availableInvestableAmount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/availableInvestableAmount",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"availableInvestableAmount"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/availableInvestment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/availableInvestment",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"availableInvestment"
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/mine/portfolio",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/mine/portfolio?page=0&size=3&filter=all",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"mine",
								"portfolio"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "3"
								},
								{
									"key": "filter",
									"value": "all"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/withInvestments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/campaigns/withInvestments?page=1&size=3&filter=all",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"withInvestments"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "3"
								},
								{
									"key": "filter",
									"value": "all"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/campaigns/{{campaign_fname}}/close",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "*/*, application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"closingReason\": \"Closed because startup failed.\",\r\n    \"isSuccessful\": false\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/campaigns/{{campaign_fname}}/close",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"campaigns",
								"{{campaign_fname}}",
								"close"
							]
						}
					},
					"response": []
				}
			],
			"description": "Folder for campaigns"
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "2fa",
					"item": [
						{
							"name": "/auth/2fa",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e692de8-4589-4582-a741-a1721f6c02d3",
										"exec": [
											"pm.globals.set(\"token\", \"Bearer \" + pm.response.json().jwt);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fd0c41b7-2315-4ef2-ae33-59a587a249d1",
										"exec": [
											"// DO NOT EDIT THIS FILE! see README.TXT - Javascript Compressor 1.1.0\r",
											"\r",
											"var SUPPORTED_ALGS=8|4|2|1;\r",
											"var X={};\r",
											"(function(global)\r",
											"{\r",
											"\"use strict\";\r",
											"var TWO_PWR_32=4294967296;\r",
											"function Int_64(msint_32,lsint_32)\r",
											"{\r",
											"this.highOrder=msint_32;\r",
											"this.lowOrder=lsint_32;\r",
											"}\r",
											"function str2packed(str,utfType,existingPacked,existingPackedLen,bigEndianMod)\r",
											"{\r",
											"var packed,codePnt,codePntArr,byteCnt=0,i,j,existingByteLen,\r",
											"intOffset,byteOffset,shiftModifier,transposeBytes;\r",
											"packed=existingPacked||[0];\r",
											"existingPackedLen=existingPackedLen||0;\r",
											"existingByteLen=existingPackedLen>>>3;\r",
											"if(\"UTF8\"===utfType)\r",
											"{\r",
											"shiftModifier=(bigEndianMod===-1)?3:0;\r",
											"for(i=0;i<str.length;i+=1)\r",
											"{\r",
											"codePnt=str.charCodeAt(i);\r",
											"codePntArr=[];\r",
											"if(0x80>codePnt)\r",
											"{\r",
											"codePntArr.push(codePnt);\r",
											"}\r",
											"else if(0x800>codePnt)\r",
											"{\r",
											"codePntArr.push(0xC0|(codePnt>>>6));\r",
											"codePntArr.push(0x80|(codePnt&0x3F));\r",
											"}\r",
											"else if((0xd800>codePnt)||(0xe000<=codePnt)){\r",
											"codePntArr.push(\r",
											"0xe0|(codePnt>>>12),\r",
											"0x80|((codePnt>>>6)&0x3f),\r",
											"0x80|(codePnt&0x3f)\r",
											");\r",
											"}\r",
											"else\r",
											"{\r",
											"i+=1;\r",
											"codePnt=0x10000+(((codePnt&0x3ff)<<10)|(str.charCodeAt(i)&0x3ff));\r",
											"codePntArr.push(\r",
											"0xf0|(codePnt>>>18),\r",
											"0x80|((codePnt>>>12)&0x3f),\r",
											"0x80|((codePnt>>>6)&0x3f),\r",
											"0x80|(codePnt&0x3f)\r",
											");\r",
											"}\r",
											"for(j=0;j<codePntArr.length;j+=1)\r",
											"{\r",
											"byteOffset=byteCnt+existingByteLen;\r",
											"intOffset=byteOffset>>>2;\r",
											"while(packed.length<=intOffset)\r",
											"{\r",
											"packed.push(0);\r",
											"}\r",
											"packed[intOffset]|=codePntArr[j]<<(8*(shiftModifier+bigEndianMod*(byteOffset%4)));\r",
											"byteCnt+=1;\r",
											"}\r",
											"}\r",
											"}\r",
											"else if((\"UTF16BE\"===utfType)||\"UTF16LE\"===utfType)\r",
											"{\r",
											"shiftModifier=(bigEndianMod===-1)?2:0;\r",
											"transposeBytes=((\"UTF16LE\"===utfType)&&(bigEndianMod!==1))||((\"UTF16LE\"!==utfType)&&(bigEndianMod===1));\r",
											"for(i=0;i<str.length;i+=1)\r",
											"{\r",
											"codePnt=str.charCodeAt(i);\r",
											"if(transposeBytes===true)\r",
											"{\r",
											"j=codePnt&0xFF;\r",
											"codePnt=(j<<8)|(codePnt>>>8);\r",
											"}\r",
											"byteOffset=byteCnt+existingByteLen;\r",
											"intOffset=byteOffset>>>2;\r",
											"while(packed.length<=intOffset)\r",
											"{\r",
											"packed.push(0);\r",
											"}\r",
											"packed[intOffset]|=codePnt<<(8*(shiftModifier+bigEndianMod*(byteOffset%4)));\r",
											"byteCnt+=2;\r",
											"}\r",
											"}\r",
											"return{\"value\":packed,\"binLen\":byteCnt*8+existingPackedLen};\r",
											"}\r",
											"function hex2packed(str,existingPacked,existingPackedLen,bigEndianMod)\r",
											"{\r",
											"var packed,length=str.length,i,num,intOffset,byteOffset,\r",
											"existingByteLen,shiftModifier;\r",
											"if(0!==(length%2))\r",
											"{\r",
											"throw new Error(\"String of HEX type must be in byte increments\");\r",
											"}\r",
											"packed=existingPacked||[0];\r",
											"existingPackedLen=existingPackedLen||0;\r",
											"existingByteLen=existingPackedLen>>>3;\r",
											"shiftModifier=(bigEndianMod===-1)?3:0;\r",
											"for(i=0;i<length;i+=2)\r",
											"{\r",
											"num=parseInt(str.substr(i,2),16);\r",
											"if(!isNaN(num))\r",
											"{\r",
											"byteOffset=(i>>>1)+existingByteLen;\r",
											"intOffset=byteOffset>>>2;\r",
											"while(packed.length<=intOffset)\r",
											"{\r",
											"packed.push(0);\r",
											"}\r",
											"packed[intOffset]|=num<<(8*(shiftModifier+bigEndianMod*(byteOffset%4)));\r",
											"}\r",
											"else\r",
											"{\r",
											"throw new Error(\"String of HEX type contains invalid characters\");\r",
											"}\r",
											"}\r",
											"return{\"value\":packed,\"binLen\":length*4+existingPackedLen};\r",
											"}\r",
											"function bytes2packed(str,existingPacked,existingPackedLen,bigEndianMod)\r",
											"{\r",
											"var packed,codePnt,i,existingByteLen,intOffset,\r",
											"byteOffset,shiftModifier;\r",
											"packed=existingPacked||[0];\r",
											"existingPackedLen=existingPackedLen||0;\r",
											"existingByteLen=existingPackedLen>>>3;\r",
											"shiftModifier=(bigEndianMod===-1)?3:0;\r",
											"for(i=0;i<str.length;i+=1)\r",
											"{\r",
											"codePnt=str.charCodeAt(i);\r",
											"byteOffset=i+existingByteLen;\r",
											"intOffset=byteOffset>>>2;\r",
											"if(packed.length<=intOffset)\r",
											"{\r",
											"packed.push(0);\r",
											"}\r",
											"packed[intOffset]|=codePnt<<(8*(shiftModifier+bigEndianMod*(byteOffset%4)));\r",
											"}\r",
											"return{\"value\":packed,\"binLen\":str.length*8+existingPackedLen};\r",
											"}\r",
											"function b642packed(str,existingPacked,existingPackedLen,bigEndianMod)\r",
											"{\r",
											"var packed,byteCnt=0,index,i,j,tmpInt,strPart,firstEqual,\r",
											"b64Tab=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\r",
											"existingByteLen,intOffset,byteOffset,shiftModifier;\r",
											"if(-1===str.search(/^[a-zA-Z0-9=+\\/]+$/))\r",
											"{\r",
											"throw new Error(\"Invalid character in base-64 string\");\r",
											"}\r",
											"firstEqual=str.indexOf(\"=\");\r",
											"str=str.replace(/\\=/g,\"\");\r",
											"if((-1!==firstEqual)&&(firstEqual<str.length))\r",
											"{\r",
											"throw new Error(\"Invalid '=' found in base-64 string\");\r",
											"}\r",
											"packed=existingPacked||[0];\r",
											"existingPackedLen=existingPackedLen||0;\r",
											"existingByteLen=existingPackedLen>>>3;\r",
											"shiftModifier=(bigEndianMod===-1)?3:0;\r",
											"for(i=0;i<str.length;i+=4)\r",
											"{\r",
											"strPart=str.substr(i,4);\r",
											"tmpInt=0;\r",
											"for(j=0;j<strPart.length;j+=1)\r",
											"{\r",
											"index=b64Tab.indexOf(strPart[j]);\r",
											"tmpInt|=index<<(18-(6*j));\r",
											"}\r",
											"for(j=0;j<strPart.length-1;j+=1)\r",
											"{\r",
											"byteOffset=byteCnt+existingByteLen;\r",
											"intOffset=byteOffset>>>2;\r",
											"while(packed.length<=intOffset)\r",
											"{\r",
											"packed.push(0);\r",
											"}\r",
											"packed[intOffset]|=((tmpInt>>>(16-(j*8)))&0xFF)<<\r",
											"(8*(shiftModifier+bigEndianMod*(byteOffset%4)));\r",
											"byteCnt+=1;\r",
											"}\r",
											"}\r",
											"return{\"value\":packed,\"binLen\":byteCnt*8+existingPackedLen};\r",
											"}\r",
											"function arraybuffer2packed(arr,existingPacked,existingPackedLen,bigEndianMod)\r",
											"{\r",
											"var packed,i,existingByteLen,intOffset,byteOffset,shiftModifier,arrView;\r",
											"packed=existingPacked||[0];\r",
											"existingPackedLen=existingPackedLen||0;\r",
											"existingByteLen=existingPackedLen>>>3;\r",
											"shiftModifier=(bigEndianMod===-1)?3:0;\r",
											"arrView=new Uint8Array(arr);\r",
											"for(i=0;i<arr.byteLength;i+=1)\r",
											"{\r",
											"byteOffset=i+existingByteLen;\r",
											"intOffset=byteOffset>>>2;\r",
											"if(packed.length<=intOffset)\r",
											"{\r",
											"packed.push(0);\r",
											"}\r",
											"packed[intOffset]|=arrView[i]<<(8*(shiftModifier+bigEndianMod*(byteOffset%4)));\r",
											"}\r",
											"return{\"value\":packed,\"binLen\":arr.byteLength*8+existingPackedLen};\r",
											"}\r",
											"function packed2hex(packed,outputLength,bigEndianMod,formatOpts)\r",
											"{\r",
											"var hex_tab=\"0123456789abcdef\",str=\"\",\r",
											"length=outputLength/8,i,srcByte,shiftModifier;\r",
											"shiftModifier=(bigEndianMod===-1)?3:0;\r",
											"for(i=0;i<length;i+=1)\r",
											"{\r",
											"srcByte=packed[i>>>2]>>>(8*(shiftModifier+bigEndianMod*(i%4)));\r",
											"str+=hex_tab.charAt((srcByte>>>4)&0xF)+\r",
											"hex_tab.charAt(srcByte&0xF);\r",
											"}\r",
											"return(formatOpts[\"outputUpper\"])?str.toUpperCase():str;\r",
											"}\r",
											"function packed2b64(packed,outputLength,bigEndianMod,formatOpts)\r",
											"{\r",
											"var str=\"\",length=outputLength/8,i,j,triplet,int1,int2,shiftModifier,\r",
											"b64Tab=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r",
											"shiftModifier=(bigEndianMod===-1)?3:0;\r",
											"for(i=0;i<length;i+=3)\r",
											"{\r",
											"int1=((i+1)<length)?packed[(i+1)>>>2]:0;\r",
											"int2=((i+2)<length)?packed[(i+2)>>>2]:0;\r",
											"triplet=(((packed[i>>>2]>>>(8*(shiftModifier+bigEndianMod*(i%4))))&0xFF)<<16)|\r",
											"(((int1>>>(8*(shiftModifier+bigEndianMod*((i+1)%4))))&0xFF)<<8)|\r",
											"((int2>>>(8*(shiftModifier+bigEndianMod*((i+2)%4))))&0xFF);\r",
											"for(j=0;j<4;j+=1)\r",
											"{\r",
											"if(i*8+j*6<=outputLength)\r",
											"{\r",
											"str+=b64Tab.charAt((triplet>>>6*(3-j))&0x3F);\r",
											"}\r",
											"else\r",
											"{\r",
											"str+=formatOpts[\"b64Pad\"];\r",
											"}\r",
											"}\r",
											"}\r",
											"return str;\r",
											"}\r",
											"function packed2bytes(packed,outputLength,bigEndianMod)\r",
											"{\r",
											"var str=\"\",length=outputLength/8,i,srcByte,shiftModifier;\r",
											"shiftModifier=(bigEndianMod===-1)?3:0;\r",
											"for(i=0;i<length;i+=1)\r",
											"{\r",
											"srcByte=(packed[i>>>2]>>>(8*(shiftModifier+bigEndianMod*(i%4))))&0xFF;\r",
											"str+=String.fromCharCode(srcByte);\r",
											"}\r",
											"return str;\r",
											"}\r",
											"function packed2arraybuffer(packed,outputLength,bigEndianMod)\r",
											"{\r",
											"var length=outputLength/8,i,retVal=new ArrayBuffer(length),shiftModifier,arrView;\r",
											"arrView=new Uint8Array(retVal);\r",
											"shiftModifier=(bigEndianMod===-1)?3:0;\r",
											"for(i=0;i<length;i+=1)\r",
											"{\r",
											"arrView[i]=(packed[i>>>2]>>>(8*(shiftModifier+bigEndianMod*(i%4))))&0xFF;\r",
											"}\r",
											"return retVal;\r",
											"}\r",
											"function getOutputOpts(options)\r",
											"{\r",
											"var retVal={\"outputUpper\":false,\"b64Pad\":\"=\",\"shakeLen\":-1},\r",
											"outputOptions;\r",
											"outputOptions=options||{};\r",
											"retVal[\"outputUpper\"]=outputOptions[\"outputUpper\"]||false;\r",
											"if(true===outputOptions.hasOwnProperty(\"b64Pad\"))\r",
											"{\r",
											"retVal[\"b64Pad\"]=outputOptions[\"b64Pad\"];\r",
											"}\r",
											"if((true===outputOptions.hasOwnProperty(\"shakeLen\"))&&((8&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"if(outputOptions[\"shakeLen\"]%8!==0)\r",
											"{\r",
											"throw new Error(\"shakeLen must be a multiple of 8\");\r",
											"}\r",
											"retVal[\"shakeLen\"]=outputOptions[\"shakeLen\"];\r",
											"}\r",
											"if(\"boolean\"!==typeof(retVal[\"outputUpper\"]))\r",
											"{\r",
											"throw new Error(\"Invalid outputUpper formatting option\");\r",
											"}\r",
											"if(\"string\"!==typeof(retVal[\"b64Pad\"]))\r",
											"{\r",
											"throw new Error(\"Invalid b64Pad formatting option\");\r",
											"}\r",
											"return retVal;\r",
											"}\r",
											"function getStrConverter(format,utfType,bigEndianMod)\r",
											"{\r",
											"var retVal;\r",
											"switch(utfType)\r",
											"{\r",
											"case\"UTF8\":\r",
											"case\"UTF16BE\":\r",
											"case\"UTF16LE\":\r",
											"break;\r",
											"default:\r",
											"throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\r",
											"}\r",
											"switch(format)\r",
											"{\r",
											"case\"HEX\":\r",
											"retVal=function(str,existingBin,existingBinLen)\r",
											"{\r",
											"return hex2packed(str,existingBin,existingBinLen,bigEndianMod);\r",
											"};\r",
											"break;\r",
											"case\"TEXT\":\r",
											"retVal=function(str,existingBin,existingBinLen)\r",
											"{\r",
											"return str2packed(str,utfType,existingBin,existingBinLen,bigEndianMod);\r",
											"};\r",
											"break;\r",
											"case\"B64\":\r",
											"retVal=function(str,existingBin,existingBinLen)\r",
											"{\r",
											"return b642packed(str,existingBin,existingBinLen,bigEndianMod);\r",
											"};\r",
											"break;\r",
											"case\"BYTES\":\r",
											"retVal=function(str,existingBin,existingBinLen)\r",
											"{\r",
											"return bytes2packed(str,existingBin,existingBinLen,bigEndianMod);\r",
											"};\r",
											"break;\r",
											"case\"ARRAYBUFFER\":\r",
											"try{\r",
											"retVal=new ArrayBuffer(0);\r",
											"}catch(ignore){\r",
											"throw new Error(\"ARRAYBUFFER not supported by this environment\");\r",
											"}\r",
											"retVal=function(arr,existingBin,existingBinLen)\r",
											"{\r",
											"return arraybuffer2packed(arr,existingBin,existingBinLen,bigEndianMod);\r",
											"};\r",
											"break;\r",
											"default:\r",
											"throw new Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");\r",
											"}\r",
											"return retVal;\r",
											"}\r",
											"function rotl_32(x,n)\r",
											"{\r",
											"return(x<<n)|(x>>>(32-n));\r",
											"}\r",
											"function rotl_64(x,n)\r",
											"{\r",
											"if(n>32)\r",
											"{\r",
											"n=n-32;\r",
											"return new Int_64(\r",
											"x.lowOrder<<n|x.highOrder>>>(32-n),\r",
											"x.highOrder<<n|x.lowOrder>>>(32-n)\r",
											");\r",
											"}\r",
											"else if(0!==n)\r",
											"{\r",
											"return new Int_64(\r",
											"x.highOrder<<n|x.lowOrder>>>(32-n),\r",
											"x.lowOrder<<n|x.highOrder>>>(32-n)\r",
											");\r",
											"}\r",
											"else\r",
											"{\r",
											"return x;\r",
											"}\r",
											"}\r",
											"function rotr_32(x,n)\r",
											"{\r",
											"return(x>>>n)|(x<<(32-n));\r",
											"}\r",
											"function rotr_64(x,n)\r",
											"{\r",
											"var retVal=null,tmp=new Int_64(x.highOrder,x.lowOrder);\r",
											"if(32>=n)\r",
											"{\r",
											"retVal=new Int_64(\r",
											"(tmp.highOrder>>>n)|((tmp.lowOrder<<(32-n))&0xFFFFFFFF),\r",
											"(tmp.lowOrder>>>n)|((tmp.highOrder<<(32-n))&0xFFFFFFFF)\r",
											");\r",
											"}\r",
											"else\r",
											"{\r",
											"retVal=new Int_64(\r",
											"(tmp.lowOrder>>>(n-32))|((tmp.highOrder<<(64-n))&0xFFFFFFFF),\r",
											"(tmp.highOrder>>>(n-32))|((tmp.lowOrder<<(64-n))&0xFFFFFFFF)\r",
											");\r",
											"}\r",
											"return retVal;\r",
											"}\r",
											"function shr_32(x,n)\r",
											"{\r",
											"return x>>>n;\r",
											"}\r",
											"function shr_64(x,n)\r",
											"{\r",
											"var retVal=null;\r",
											"if(32>=n)\r",
											"{\r",
											"retVal=new Int_64(\r",
											"x.highOrder>>>n,\r",
											"x.lowOrder>>>n|((x.highOrder<<(32-n))&0xFFFFFFFF)\r",
											");\r",
											"}\r",
											"else\r",
											"{\r",
											"retVal=new Int_64(\r",
											"0,\r",
											"x.highOrder>>>(n-32)\r",
											");\r",
											"}\r",
											"return retVal;\r",
											"}\r",
											"function parity_32(x,y,z)\r",
											"{\r",
											"return x^y^z;\r",
											"}\r",
											"function ch_32(x,y,z)\r",
											"{\r",
											"return(x&y)^(~x&z);\r",
											"}\r",
											"function ch_64(x,y,z)\r",
											"{\r",
											"return new Int_64(\r",
											"(x.highOrder&y.highOrder)^(~x.highOrder&z.highOrder),\r",
											"(x.lowOrder&y.lowOrder)^(~x.lowOrder&z.lowOrder)\r",
											");\r",
											"}\r",
											"function maj_32(x,y,z)\r",
											"{\r",
											"return(x&y)^(x&z)^(y&z);\r",
											"}\r",
											"function maj_64(x,y,z)\r",
											"{\r",
											"return new Int_64(\r",
											"(x.highOrder&y.highOrder)^\r",
											"(x.highOrder&z.highOrder)^\r",
											"(y.highOrder&z.highOrder),\r",
											"(x.lowOrder&y.lowOrder)^\r",
											"(x.lowOrder&z.lowOrder)^\r",
											"(y.lowOrder&z.lowOrder)\r",
											");\r",
											"}\r",
											"function sigma0_32(x)\r",
											"{\r",
											"return rotr_32(x,2)^rotr_32(x,13)^rotr_32(x,22);\r",
											"}\r",
											"function sigma0_64(x)\r",
											"{\r",
											"var rotr28=rotr_64(x,28),rotr34=rotr_64(x,34),\r",
											"rotr39=rotr_64(x,39);\r",
											"return new Int_64(\r",
											"rotr28.highOrder^rotr34.highOrder^rotr39.highOrder,\r",
											"rotr28.lowOrder^rotr34.lowOrder^rotr39.lowOrder);\r",
											"}\r",
											"function sigma1_32(x)\r",
											"{\r",
											"return rotr_32(x,6)^rotr_32(x,11)^rotr_32(x,25);\r",
											"}\r",
											"function sigma1_64(x)\r",
											"{\r",
											"var rotr14=rotr_64(x,14),rotr18=rotr_64(x,18),\r",
											"rotr41=rotr_64(x,41);\r",
											"return new Int_64(\r",
											"rotr14.highOrder^rotr18.highOrder^rotr41.highOrder,\r",
											"rotr14.lowOrder^rotr18.lowOrder^rotr41.lowOrder);\r",
											"}\r",
											"function gamma0_32(x)\r",
											"{\r",
											"return rotr_32(x,7)^rotr_32(x,18)^shr_32(x,3);\r",
											"}\r",
											"function gamma0_64(x)\r",
											"{\r",
											"var rotr1=rotr_64(x,1),rotr8=rotr_64(x,8),shr7=shr_64(x,7);\r",
											"return new Int_64(\r",
											"rotr1.highOrder^rotr8.highOrder^shr7.highOrder,\r",
											"rotr1.lowOrder^rotr8.lowOrder^shr7.lowOrder\r",
											");\r",
											"}\r",
											"function gamma1_32(x)\r",
											"{\r",
											"return rotr_32(x,17)^rotr_32(x,19)^shr_32(x,10);\r",
											"}\r",
											"function gamma1_64(x)\r",
											"{\r",
											"var rotr19=rotr_64(x,19),rotr61=rotr_64(x,61),\r",
											"shr6=shr_64(x,6);\r",
											"return new Int_64(\r",
											"rotr19.highOrder^rotr61.highOrder^shr6.highOrder,\r",
											"rotr19.lowOrder^rotr61.lowOrder^shr6.lowOrder\r",
											");\r",
											"}\r",
											"function safeAdd_32_2(a,b)\r",
											"{\r",
											"var lsw=(a&0xFFFF)+(b&0xFFFF),\r",
											"msw=(a>>>16)+(b>>>16)+(lsw>>>16);\r",
											"return((msw&0xFFFF)<<16)|(lsw&0xFFFF);\r",
											"}\r",
											"function safeAdd_32_4(a,b,c,d)\r",
											"{\r",
											"var lsw=(a&0xFFFF)+(b&0xFFFF)+(c&0xFFFF)+(d&0xFFFF),\r",
											"msw=(a>>>16)+(b>>>16)+(c>>>16)+(d>>>16)+\r",
											"(lsw>>>16);\r",
											"return((msw&0xFFFF)<<16)|(lsw&0xFFFF);\r",
											"}\r",
											"function safeAdd_32_5(a,b,c,d,e)\r",
											"{\r",
											"var lsw=(a&0xFFFF)+(b&0xFFFF)+(c&0xFFFF)+(d&0xFFFF)+\r",
											"(e&0xFFFF),\r",
											"msw=(a>>>16)+(b>>>16)+(c>>>16)+(d>>>16)+\r",
											"(e>>>16)+(lsw>>>16);\r",
											"return((msw&0xFFFF)<<16)|(lsw&0xFFFF);\r",
											"}\r",
											"function safeAdd_64_2(x,y)\r",
											"{\r",
											"var lsw,msw,lowOrder,highOrder;\r",
											"lsw=(x.lowOrder&0xFFFF)+(y.lowOrder&0xFFFF);\r",
											"msw=(x.lowOrder>>>16)+(y.lowOrder>>>16)+(lsw>>>16);\r",
											"lowOrder=((msw&0xFFFF)<<16)|(lsw&0xFFFF);\r",
											"lsw=(x.highOrder&0xFFFF)+(y.highOrder&0xFFFF)+(msw>>>16);\r",
											"msw=(x.highOrder>>>16)+(y.highOrder>>>16)+(lsw>>>16);\r",
											"highOrder=((msw&0xFFFF)<<16)|(lsw&0xFFFF);\r",
											"return new Int_64(highOrder,lowOrder);\r",
											"}\r",
											"function safeAdd_64_4(a,b,c,d)\r",
											"{\r",
											"var lsw,msw,lowOrder,highOrder;\r",
											"lsw=(a.lowOrder&0xFFFF)+(b.lowOrder&0xFFFF)+\r",
											"(c.lowOrder&0xFFFF)+(d.lowOrder&0xFFFF);\r",
											"msw=(a.lowOrder>>>16)+(b.lowOrder>>>16)+\r",
											"(c.lowOrder>>>16)+(d.lowOrder>>>16)+(lsw>>>16);\r",
											"lowOrder=((msw&0xFFFF)<<16)|(lsw&0xFFFF);\r",
											"lsw=(a.highOrder&0xFFFF)+(b.highOrder&0xFFFF)+\r",
											"(c.highOrder&0xFFFF)+(d.highOrder&0xFFFF)+(msw>>>16);\r",
											"msw=(a.highOrder>>>16)+(b.highOrder>>>16)+\r",
											"(c.highOrder>>>16)+(d.highOrder>>>16)+(lsw>>>16);\r",
											"highOrder=((msw&0xFFFF)<<16)|(lsw&0xFFFF);\r",
											"return new Int_64(highOrder,lowOrder);\r",
											"}\r",
											"function safeAdd_64_5(a,b,c,d,e)\r",
											"{\r",
											"var lsw,msw,lowOrder,highOrder;\r",
											"lsw=(a.lowOrder&0xFFFF)+(b.lowOrder&0xFFFF)+\r",
											"(c.lowOrder&0xFFFF)+(d.lowOrder&0xFFFF)+\r",
											"(e.lowOrder&0xFFFF);\r",
											"msw=(a.lowOrder>>>16)+(b.lowOrder>>>16)+\r",
											"(c.lowOrder>>>16)+(d.lowOrder>>>16)+(e.lowOrder>>>16)+\r",
											"(lsw>>>16);\r",
											"lowOrder=((msw&0xFFFF)<<16)|(lsw&0xFFFF);\r",
											"lsw=(a.highOrder&0xFFFF)+(b.highOrder&0xFFFF)+\r",
											"(c.highOrder&0xFFFF)+(d.highOrder&0xFFFF)+\r",
											"(e.highOrder&0xFFFF)+(msw>>>16);\r",
											"msw=(a.highOrder>>>16)+(b.highOrder>>>16)+\r",
											"(c.highOrder>>>16)+(d.highOrder>>>16)+\r",
											"(e.highOrder>>>16)+(lsw>>>16);\r",
											"highOrder=((msw&0xFFFF)<<16)|(lsw&0xFFFF);\r",
											"return new Int_64(highOrder,lowOrder);\r",
											"}\r",
											"function xor_64_2(a,b)\r",
											"{\r",
											"return new Int_64(\r",
											"a.highOrder^b.highOrder,\r",
											"a.lowOrder^b.lowOrder\r",
											");\r",
											"}\r",
											"function xor_64_5(a,b,c,d,e)\r",
											"{\r",
											"return new Int_64(\r",
											"a.highOrder^b.highOrder^c.highOrder^d.highOrder^e.highOrder,\r",
											"a.lowOrder^b.lowOrder^c.lowOrder^d.lowOrder^e.lowOrder\r",
											");\r",
											"}\r",
											"function cloneSHA3State(state){\r",
											"var clone=[],i;\r",
											"for(i=0;i<5;i+=1)\r",
											"{\r",
											"clone[i]=state[i].slice();\r",
											"}\r",
											"return clone;\r",
											"}\r",
											"function getNewState(variant)\r",
											"{\r",
											"var retVal=[],H_trunc,H_full,i;\r",
											"if((\"SHA-1\"===variant)&&((1&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"retVal=[\r",
											"0x67452301,0xefcdab89,0x98badcfe,0x10325476,0xc3d2e1f0\r",
											"];\r",
											"}\r",
											"else if((variant.lastIndexOf(\"SHA-\",0)===0)&&((6&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"H_trunc=[\r",
											"0xc1059ed8,0x367cd507,0x3070dd17,0xf70e5939,\r",
											"0xffc00b31,0x68581511,0x64f98fa7,0xbefa4fa4\r",
											"];\r",
											"H_full=[\r",
											"0x6A09E667,0xBB67AE85,0x3C6EF372,0xA54FF53A,\r",
											"0x510E527F,0x9B05688C,0x1F83D9AB,0x5BE0CD19\r",
											"];\r",
											"switch(variant)\r",
											"{\r",
											"case\"SHA-224\":\r",
											"retVal=H_trunc;\r",
											"break;\r",
											"case\"SHA-256\":\r",
											"retVal=H_full;\r",
											"break;\r",
											"case\"SHA-384\":\r",
											"retVal=[\r",
											"new Int_64(0xcbbb9d5d,H_trunc[0]),\r",
											"new Int_64(0x0629a292a,H_trunc[1]),\r",
											"new Int_64(0x9159015a,H_trunc[2]),\r",
											"new Int_64(0x0152fecd8,H_trunc[3]),\r",
											"new Int_64(0x67332667,H_trunc[4]),\r",
											"new Int_64(0x98eb44a87,H_trunc[5]),\r",
											"new Int_64(0xdb0c2e0d,H_trunc[6]),\r",
											"new Int_64(0x047b5481d,H_trunc[7])\r",
											"];\r",
											"break;\r",
											"case\"SHA-512\":\r",
											"retVal=[\r",
											"new Int_64(H_full[0],0xf3bcc908),\r",
											"new Int_64(H_full[1],0x84caa73b),\r",
											"new Int_64(H_full[2],0xfe94f82b),\r",
											"new Int_64(H_full[3],0x5f1d36f1),\r",
											"new Int_64(H_full[4],0xade682d1),\r",
											"new Int_64(H_full[5],0x2b3e6c1f),\r",
											"new Int_64(H_full[6],0xfb41bd6b),\r",
											"new Int_64(H_full[7],0x137e2179)\r",
											"];\r",
											"break;\r",
											"default:\r",
											"throw new Error(\"Unknown SHA variant\");\r",
											"}\r",
											"}\r",
											"else if(((variant.lastIndexOf(\"SHA3-\",0)===0)||(variant.lastIndexOf(\"SHAKE\",0)===0))&&\r",
											"((8&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"for(i=0;i<5;i+=1)\r",
											"{\r",
											"retVal[i]=[new Int_64(0,0),new Int_64(0,0),new Int_64(0,0),new Int_64(0,0),new Int_64(0,0)];\r",
											"}\r",
											"}\r",
											"else\r",
											"{\r",
											"throw new Error(\"No SHA variants supported\");\r",
											"}\r",
											"return retVal;\r",
											"}\r",
											"function roundSHA1(block,H)\r",
											"{\r",
											"var W=[],a,b,c,d,e,T,ch=ch_32,parity=parity_32,\r",
											"maj=maj_32,rotl=rotl_32,safeAdd_2=safeAdd_32_2,t,\r",
											"safeAdd_5=safeAdd_32_5;\r",
											"a=H[0];\r",
											"b=H[1];\r",
											"c=H[2];\r",
											"d=H[3];\r",
											"e=H[4];\r",
											"for(t=0;t<80;t+=1)\r",
											"{\r",
											"if(t<16)\r",
											"{\r",
											"W[t]=block[t];\r",
											"}\r",
											"else\r",
											"{\r",
											"W[t]=rotl(W[t-3]^W[t-8]^W[t-14]^W[t-16],1);\r",
											"}\r",
											"if(t<20)\r",
											"{\r",
											"T=safeAdd_5(rotl(a,5),ch(b,c,d),e,0x5a827999,W[t]);\r",
											"}\r",
											"else if(t<40)\r",
											"{\r",
											"T=safeAdd_5(rotl(a,5),parity(b,c,d),e,0x6ed9eba1,W[t]);\r",
											"}\r",
											"else if(t<60)\r",
											"{\r",
											"T=safeAdd_5(rotl(a,5),maj(b,c,d),e,0x8f1bbcdc,W[t]);\r",
											"}else{\r",
											"T=safeAdd_5(rotl(a,5),parity(b,c,d),e,0xca62c1d6,W[t]);\r",
											"}\r",
											"e=d;\r",
											"d=c;\r",
											"c=rotl(b,30);\r",
											"b=a;\r",
											"a=T;\r",
											"}\r",
											"H[0]=safeAdd_2(a,H[0]);\r",
											"H[1]=safeAdd_2(b,H[1]);\r",
											"H[2]=safeAdd_2(c,H[2]);\r",
											"H[3]=safeAdd_2(d,H[3]);\r",
											"H[4]=safeAdd_2(e,H[4]);\r",
											"return H;\r",
											"}\r",
											"function finalizeSHA1(remainder,remainderBinLen,processedBinLen,H,outputLen)\r",
											"{\r",
											"var i,appendedMessageLength,offset,totalLen;\r",
											"offset=(((remainderBinLen+65)>>>9)<<4)+15;\r",
											"while(remainder.length<=offset)\r",
											"{\r",
											"remainder.push(0);\r",
											"}\r",
											"remainder[remainderBinLen>>>5]|=0x80<<(24-(remainderBinLen%32));\r",
											"totalLen=remainderBinLen+processedBinLen;\r",
											"remainder[offset]=totalLen&0xFFFFFFFF;\r",
											"remainder[offset-1]=(totalLen/TWO_PWR_32)|0;\r",
											"appendedMessageLength=remainder.length;\r",
											"for(i=0;i<appendedMessageLength;i+=16)\r",
											"{\r",
											"H=roundSHA1(remainder.slice(i,i+16),H);\r",
											"}\r",
											"return H;\r",
											"}\r",
											"var K_sha2,K_sha512,r_sha3,rc_sha3;\r",
											"if((6&SUPPORTED_ALGS)!==0)\r",
											"{\r",
											"K_sha2=[\r",
											"0x428A2F98,0x71374491,0xB5C0FBCF,0xE9B5DBA5,\r",
											"0x3956C25B,0x59F111F1,0x923F82A4,0xAB1C5ED5,\r",
											"0xD807AA98,0x12835B01,0x243185BE,0x550C7DC3,\r",
											"0x72BE5D74,0x80DEB1FE,0x9BDC06A7,0xC19BF174,\r",
											"0xE49B69C1,0xEFBE4786,0x0FC19DC6,0x240CA1CC,\r",
											"0x2DE92C6F,0x4A7484AA,0x5CB0A9DC,0x76F988DA,\r",
											"0x983E5152,0xA831C66D,0xB00327C8,0xBF597FC7,\r",
											"0xC6E00BF3,0xD5A79147,0x06CA6351,0x14292967,\r",
											"0x27B70A85,0x2E1B2138,0x4D2C6DFC,0x53380D13,\r",
											"0x650A7354,0x766A0ABB,0x81C2C92E,0x92722C85,\r",
											"0xA2BFE8A1,0xA81A664B,0xC24B8B70,0xC76C51A3,\r",
											"0xD192E819,0xD6990624,0xF40E3585,0x106AA070,\r",
											"0x19A4C116,0x1E376C08,0x2748774C,0x34B0BCB5,\r",
											"0x391C0CB3,0x4ED8AA4A,0x5B9CCA4F,0x682E6FF3,\r",
											"0x748F82EE,0x78A5636F,0x84C87814,0x8CC70208,\r",
											"0x90BEFFFA,0xA4506CEB,0xBEF9A3F7,0xC67178F2\r",
											"];\r",
											"if((4&SUPPORTED_ALGS)!==0)\r",
											"{\r",
											"K_sha512=[\r",
											"new Int_64(K_sha2[0],0xd728ae22),new Int_64(K_sha2[1],0x23ef65cd),\r",
											"new Int_64(K_sha2[2],0xec4d3b2f),new Int_64(K_sha2[3],0x8189dbbc),\r",
											"new Int_64(K_sha2[4],0xf348b538),new Int_64(K_sha2[5],0xb605d019),\r",
											"new Int_64(K_sha2[6],0xaf194f9b),new Int_64(K_sha2[7],0xda6d8118),\r",
											"new Int_64(K_sha2[8],0xa3030242),new Int_64(K_sha2[9],0x45706fbe),\r",
											"new Int_64(K_sha2[10],0x4ee4b28c),new Int_64(K_sha2[11],0xd5ffb4e2),\r",
											"new Int_64(K_sha2[12],0xf27b896f),new Int_64(K_sha2[13],0x3b1696b1),\r",
											"new Int_64(K_sha2[14],0x25c71235),new Int_64(K_sha2[15],0xcf692694),\r",
											"new Int_64(K_sha2[16],0x9ef14ad2),new Int_64(K_sha2[17],0x384f25e3),\r",
											"new Int_64(K_sha2[18],0x8b8cd5b5),new Int_64(K_sha2[19],0x77ac9c65),\r",
											"new Int_64(K_sha2[20],0x592b0275),new Int_64(K_sha2[21],0x6ea6e483),\r",
											"new Int_64(K_sha2[22],0xbd41fbd4),new Int_64(K_sha2[23],0x831153b5),\r",
											"new Int_64(K_sha2[24],0xee66dfab),new Int_64(K_sha2[25],0x2db43210),\r",
											"new Int_64(K_sha2[26],0x98fb213f),new Int_64(K_sha2[27],0xbeef0ee4),\r",
											"new Int_64(K_sha2[28],0x3da88fc2),new Int_64(K_sha2[29],0x930aa725),\r",
											"new Int_64(K_sha2[30],0xe003826f),new Int_64(K_sha2[31],0x0a0e6e70),\r",
											"new Int_64(K_sha2[32],0x46d22ffc),new Int_64(K_sha2[33],0x5c26c926),\r",
											"new Int_64(K_sha2[34],0x5ac42aed),new Int_64(K_sha2[35],0x9d95b3df),\r",
											"new Int_64(K_sha2[36],0x8baf63de),new Int_64(K_sha2[37],0x3c77b2a8),\r",
											"new Int_64(K_sha2[38],0x47edaee6),new Int_64(K_sha2[39],0x1482353b),\r",
											"new Int_64(K_sha2[40],0x4cf10364),new Int_64(K_sha2[41],0xbc423001),\r",
											"new Int_64(K_sha2[42],0xd0f89791),new Int_64(K_sha2[43],0x0654be30),\r",
											"new Int_64(K_sha2[44],0xd6ef5218),new Int_64(K_sha2[45],0x5565a910),\r",
											"new Int_64(K_sha2[46],0x5771202a),new Int_64(K_sha2[47],0x32bbd1b8),\r",
											"new Int_64(K_sha2[48],0xb8d2d0c8),new Int_64(K_sha2[49],0x5141ab53),\r",
											"new Int_64(K_sha2[50],0xdf8eeb99),new Int_64(K_sha2[51],0xe19b48a8),\r",
											"new Int_64(K_sha2[52],0xc5c95a63),new Int_64(K_sha2[53],0xe3418acb),\r",
											"new Int_64(K_sha2[54],0x7763e373),new Int_64(K_sha2[55],0xd6b2b8a3),\r",
											"new Int_64(K_sha2[56],0x5defb2fc),new Int_64(K_sha2[57],0x43172f60),\r",
											"new Int_64(K_sha2[58],0xa1f0ab72),new Int_64(K_sha2[59],0x1a6439ec),\r",
											"new Int_64(K_sha2[60],0x23631e28),new Int_64(K_sha2[61],0xde82bde9),\r",
											"new Int_64(K_sha2[62],0xb2c67915),new Int_64(K_sha2[63],0xe372532b),\r",
											"new Int_64(0xca273ece,0xea26619c),new Int_64(0xd186b8c7,0x21c0c207),\r",
											"new Int_64(0xeada7dd6,0xcde0eb1e),new Int_64(0xf57d4f7f,0xee6ed178),\r",
											"new Int_64(0x06f067aa,0x72176fba),new Int_64(0x0a637dc5,0xa2c898a6),\r",
											"new Int_64(0x113f9804,0xbef90dae),new Int_64(0x1b710b35,0x131c471b),\r",
											"new Int_64(0x28db77f5,0x23047d84),new Int_64(0x32caab7b,0x40c72493),\r",
											"new Int_64(0x3c9ebe0a,0x15c9bebc),new Int_64(0x431d67c4,0x9c100d4c),\r",
											"new Int_64(0x4cc5d4be,0xcb3e42b6),new Int_64(0x597f299c,0xfc657e2a),\r",
											"new Int_64(0x5fcb6fab,0x3ad6faec),new Int_64(0x6c44198c,0x4a475817)\r",
											"];\r",
											"}\r",
											"}\r",
											"if((8&SUPPORTED_ALGS)!==0)\r",
											"{\r",
											"rc_sha3=[\r",
											"new Int_64(0x00000000,0x00000001),new Int_64(0x00000000,0x00008082),\r",
											"new Int_64(0x80000000,0x0000808A),new Int_64(0x80000000,0x80008000),\r",
											"new Int_64(0x00000000,0x0000808B),new Int_64(0x00000000,0x80000001),\r",
											"new Int_64(0x80000000,0x80008081),new Int_64(0x80000000,0x00008009),\r",
											"new Int_64(0x00000000,0x0000008A),new Int_64(0x00000000,0x00000088),\r",
											"new Int_64(0x00000000,0x80008009),new Int_64(0x00000000,0x8000000A),\r",
											"new Int_64(0x00000000,0x8000808B),new Int_64(0x80000000,0x0000008B),\r",
											"new Int_64(0x80000000,0x00008089),new Int_64(0x80000000,0x00008003),\r",
											"new Int_64(0x80000000,0x00008002),new Int_64(0x80000000,0x00000080),\r",
											"new Int_64(0x00000000,0x0000800A),new Int_64(0x80000000,0x8000000A),\r",
											"new Int_64(0x80000000,0x80008081),new Int_64(0x80000000,0x00008080),\r",
											"new Int_64(0x00000000,0x80000001),new Int_64(0x80000000,0x80008008)\r",
											"];\r",
											"r_sha3=[\r",
											"[0,36,3,41,18],\r",
											"[1,44,10,45,2],\r",
											"[62,6,43,15,61],\r",
											"[28,55,25,21,56],\r",
											"[27,20,39,8,14]\r",
											"];\r",
											"}\r",
											"function roundSHA2(block,H,variant)\r",
											"{\r",
											"var a,b,c,d,e,f,g,h,T1,T2,numRounds,t,binaryStringMult,\r",
											"safeAdd_2,safeAdd_4,safeAdd_5,gamma0,gamma1,sigma0,sigma1,\r",
											"ch,maj,Int,W=[],int1,int2,offset,K;\r",
											"if((variant===\"SHA-224\"||variant===\"SHA-256\")&&\r",
											"((2&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"numRounds=64;\r",
											"binaryStringMult=1;\r",
											"Int=Number;\r",
											"safeAdd_2=safeAdd_32_2;\r",
											"safeAdd_4=safeAdd_32_4;\r",
											"safeAdd_5=safeAdd_32_5;\r",
											"gamma0=gamma0_32;\r",
											"gamma1=gamma1_32;\r",
											"sigma0=sigma0_32;\r",
											"sigma1=sigma1_32;\r",
											"maj=maj_32;\r",
											"ch=ch_32;\r",
											"K=K_sha2;\r",
											"}\r",
											"else if((variant===\"SHA-384\"||variant===\"SHA-512\")&&\r",
											"((4&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"numRounds=80;\r",
											"binaryStringMult=2;\r",
											"Int=Int_64;\r",
											"safeAdd_2=safeAdd_64_2;\r",
											"safeAdd_4=safeAdd_64_4;\r",
											"safeAdd_5=safeAdd_64_5;\r",
											"gamma0=gamma0_64;\r",
											"gamma1=gamma1_64;\r",
											"sigma0=sigma0_64;\r",
											"sigma1=sigma1_64;\r",
											"maj=maj_64;\r",
											"ch=ch_64;\r",
											"K=K_sha512;\r",
											"}\r",
											"else\r",
											"{\r",
											"throw new Error(\"Unexpected error in SHA-2 implementation\");\r",
											"}\r",
											"a=H[0];\r",
											"b=H[1];\r",
											"c=H[2];\r",
											"d=H[3];\r",
											"e=H[4];\r",
											"f=H[5];\r",
											"g=H[6];\r",
											"h=H[7];\r",
											"for(t=0;t<numRounds;t+=1)\r",
											"{\r",
											"if(t<16)\r",
											"{\r",
											"offset=t*binaryStringMult;\r",
											"int1=(block.length<=offset)?0:block[offset];\r",
											"int2=(block.length<=offset+1)?0:block[offset+1];\r",
											"W[t]=new Int(int1,int2);\r",
											"}\r",
											"else\r",
											"{\r",
											"W[t]=safeAdd_4(\r",
											"gamma1(W[t-2]),W[t-7],\r",
											"gamma0(W[t-15]),W[t-16]\r",
											");\r",
											"}\r",
											"T1=safeAdd_5(h,sigma1(e),ch(e,f,g),K[t],W[t]);\r",
											"T2=safeAdd_2(sigma0(a),maj(a,b,c));\r",
											"h=g;\r",
											"g=f;\r",
											"f=e;\r",
											"e=safeAdd_2(d,T1);\r",
											"d=c;\r",
											"c=b;\r",
											"b=a;\r",
											"a=safeAdd_2(T1,T2);\r",
											"}\r",
											"H[0]=safeAdd_2(a,H[0]);\r",
											"H[1]=safeAdd_2(b,H[1]);\r",
											"H[2]=safeAdd_2(c,H[2]);\r",
											"H[3]=safeAdd_2(d,H[3]);\r",
											"H[4]=safeAdd_2(e,H[4]);\r",
											"H[5]=safeAdd_2(f,H[5]);\r",
											"H[6]=safeAdd_2(g,H[6]);\r",
											"H[7]=safeAdd_2(h,H[7]);\r",
											"return H;\r",
											"}\r",
											"function finalizeSHA2(remainder,remainderBinLen,processedBinLen,H,variant,outputLen)\r",
											"{\r",
											"var i,appendedMessageLength,offset,retVal,binaryStringInc,totalLen;\r",
											"if((variant===\"SHA-224\"||variant===\"SHA-256\")&&\r",
											"((2&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"offset=(((remainderBinLen+65)>>>9)<<4)+15;\r",
											"binaryStringInc=16;\r",
											"}\r",
											"else if((variant===\"SHA-384\"||variant===\"SHA-512\")&&\r",
											"((4&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"offset=(((remainderBinLen+129)>>>10)<<5)+31;\r",
											"binaryStringInc=32;\r",
											"}\r",
											"else\r",
											"{\r",
											"throw new Error(\"Unexpected error in SHA-2 implementation\");\r",
											"}\r",
											"while(remainder.length<=offset)\r",
											"{\r",
											"remainder.push(0);\r",
											"}\r",
											"remainder[remainderBinLen>>>5]|=0x80<<(24-remainderBinLen%32);\r",
											"totalLen=remainderBinLen+processedBinLen;\r",
											"remainder[offset]=totalLen&0xFFFFFFFF;\r",
											"remainder[offset-1]=(totalLen/TWO_PWR_32)|0;\r",
											"appendedMessageLength=remainder.length;\r",
											"for(i=0;i<appendedMessageLength;i+=binaryStringInc)\r",
											"{\r",
											"H=roundSHA2(remainder.slice(i,i+binaryStringInc),H,variant);\r",
											"}\r",
											"if((\"SHA-224\"===variant)&&((2&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"retVal=[\r",
											"H[0],H[1],H[2],H[3],\r",
											"H[4],H[5],H[6]\r",
											"];\r",
											"}\r",
											"else if((\"SHA-256\"===variant)&&((2&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"retVal=H;\r",
											"}\r",
											"else if((\"SHA-384\"===variant)&&((4&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"retVal=[\r",
											"H[0].highOrder,H[0].lowOrder,\r",
											"H[1].highOrder,H[1].lowOrder,\r",
											"H[2].highOrder,H[2].lowOrder,\r",
											"H[3].highOrder,H[3].lowOrder,\r",
											"H[4].highOrder,H[4].lowOrder,\r",
											"H[5].highOrder,H[5].lowOrder\r",
											"];\r",
											"}\r",
											"else if((\"SHA-512\"===variant)&&((4&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"retVal=[\r",
											"H[0].highOrder,H[0].lowOrder,\r",
											"H[1].highOrder,H[1].lowOrder,\r",
											"H[2].highOrder,H[2].lowOrder,\r",
											"H[3].highOrder,H[3].lowOrder,\r",
											"H[4].highOrder,H[4].lowOrder,\r",
											"H[5].highOrder,H[5].lowOrder,\r",
											"H[6].highOrder,H[6].lowOrder,\r",
											"H[7].highOrder,H[7].lowOrder\r",
											"];\r",
											"}\r",
											"else\r",
											"{\r",
											"throw new Error(\"Unexpected error in SHA-2 implementation\");\r",
											"}\r",
											"return retVal;\r",
											"}\r",
											"function roundSHA3(block,state)\r",
											"{\r",
											"var round,x,y,B,C=[],D=[];\r",
											"if(null!==block)\r",
											"{\r",
											"for(x=0;x<block.length;x+=2)\r",
											"{\r",
											"state[(x>>>1)%5][((x>>>1)/5)|0]=xor_64_2(\r",
											"state[(x>>>1)%5][((x>>>1)/5)|0],\r",
											"new Int_64(block[x+1],block[x])\r",
											");\r",
											"}\r",
											"}\r",
											"for(round=0;round<24;round+=1)\r",
											"{\r",
											"B=getNewState(\"SHA3-\");\r",
											"for(x=0;x<5;x+=1)\r",
											"{\r",
											"C[x]=xor_64_5(state[x][0],state[x][1],state[x][2],\r",
											"state[x][3],state[x][4]);\r",
											"}\r",
											"for(x=0;x<5;x+=1)\r",
											"{\r",
											"D[x]=xor_64_2(C[(x+4)%5],rotl_64(C[(x+1)%5],1));\r",
											"}\r",
											"for(x=0;x<5;x+=1)\r",
											"{\r",
											"for(y=0;y<5;y+=1)\r",
											"{\r",
											"state[x][y]=xor_64_2(state[x][y],D[x]);\r",
											"}\r",
											"}\r",
											"for(x=0;x<5;x+=1)\r",
											"{\r",
											"for(y=0;y<5;y+=1)\r",
											"{\r",
											"B[y][(2*x+3*y)%5]=rotl_64(\r",
											"state[x][y],\r",
											"r_sha3[x][y]\r",
											");\r",
											"}\r",
											"}\r",
											"for(x=0;x<5;x+=1)\r",
											"{\r",
											"for(y=0;y<5;y+=1)\r",
											"{\r",
											"state[x][y]=xor_64_2(\r",
											"B[x][y],\r",
											"new Int_64(\r",
											"~(B[(x+1)%5][y].highOrder)&B[(x+2)%5][y].highOrder,\r",
											"~(B[(x+1)%5][y].lowOrder)&B[(x+2)%5][y].lowOrder\r",
											")\r",
											");\r",
											"}\r",
											"}\r",
											"state[0][0]=xor_64_2(state[0][0],rc_sha3[round]);\r",
											"}\r",
											"return state;\r",
											"}\r",
											"function finalizeSHA3(remainder,remainderBinLen,processedBinLen,state,blockSize,delimiter,outputLen)\r",
											"{\r",
											"var i,retVal=[],binaryStringInc=blockSize>>>5,state_offset=0,\r",
											"remainderIntLen=remainderBinLen>>>5,temp;\r",
											"for(i=0;i<remainderIntLen&&remainderBinLen>=blockSize;i+=binaryStringInc)\r",
											"{\r",
											"state=roundSHA3(remainder.slice(i,i+binaryStringInc),state);\r",
											"remainderBinLen-=blockSize;\r",
											"}\r",
											"remainder=remainder.slice(i);\r",
											"remainderBinLen=remainderBinLen%blockSize;\r",
											"while(remainder.length<binaryStringInc)\r",
											"{\r",
											"remainder.push(0);\r",
											"}\r",
											"i=remainderBinLen>>>3;\r",
											"remainder[i>>2]^=delimiter<<(8*(i%4));\r",
											"remainder[binaryStringInc-1]^=0x80000000;\r",
											"state=roundSHA3(remainder,state);\r",
											"while(retVal.length*32<outputLen)\r",
											"{\r",
											"temp=state[state_offset%5][(state_offset/5)|0];\r",
											"retVal.push(temp.lowOrder);\r",
											"if(retVal.length*32>=outputLen)\r",
											"{\r",
											"break;\r",
											"}\r",
											"retVal.push(temp.highOrder);\r",
											"state_offset+=1;\r",
											"if(0===((state_offset*64)%blockSize))\r",
											"{\r",
											"roundSHA3(null,state);\r",
											"}\r",
											"}\r",
											"return retVal;\r",
											"}\r",
											"var jsSHA=function(variant,inputFormat,options)\r",
											"{\r",
											"var processedLen=0,remainder=[],remainderLen=0,utfType,\r",
											"intermediateState,converterFunc,shaVariant=variant,outputBinLen,\r",
											"variantBlockSize,roundFunc,finalizeFunc,stateCloneFunc,\r",
											"hmacKeySet=false,keyWithIPad=[],keyWithOPad=[],numRounds,\r",
											"updatedCalled=false,inputOptions,isSHAKE=false,bigEndianMod=-1;\r",
											"inputOptions=options||{};\r",
											"utfType=inputOptions[\"encoding\"]||\"UTF8\";\r",
											"numRounds=inputOptions[\"numRounds\"]||1;\r",
											"if((numRounds!==parseInt(numRounds,10))||(1>numRounds))\r",
											"{\r",
											"throw new Error(\"numRounds must a integer >= 1\");\r",
											"}\r",
											"if((\"SHA-1\"===shaVariant)&&((1&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"variantBlockSize=512;\r",
											"roundFunc=roundSHA1;\r",
											"finalizeFunc=finalizeSHA1;\r",
											"outputBinLen=160;\r",
											"stateCloneFunc=function(state){return state.slice();};\r",
											"}\r",
											"else if((shaVariant.lastIndexOf(\"SHA-\",0)===0)&&((6&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"roundFunc=function(block,H){\r",
											"return roundSHA2(block,H,shaVariant);\r",
											"};\r",
											"finalizeFunc=function(remainder,remainderBinLen,processedBinLen,H,outputLen)\r",
											"{\r",
											"return finalizeSHA2(remainder,remainderBinLen,processedBinLen,H,shaVariant,outputLen);\r",
											"};\r",
											"stateCloneFunc=function(state){return state.slice();};\r",
											"if((\"SHA-224\"===shaVariant)&&((2&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"variantBlockSize=512;\r",
											"outputBinLen=224;\r",
											"}\r",
											"else if((\"SHA-256\"===shaVariant)&&((2&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"variantBlockSize=512;\r",
											"outputBinLen=256;\r",
											"}\r",
											"else if((\"SHA-384\"===shaVariant)&&((4&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"variantBlockSize=1024;\r",
											"outputBinLen=384;\r",
											"}\r",
											"else if((\"SHA-512\"===shaVariant)&&((4&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"variantBlockSize=1024;\r",
											"outputBinLen=512;\r",
											"}\r",
											"else\r",
											"{\r",
											"throw new Error(\"Chosen SHA variant is not supported \"+shaVariant);\r",
											"}\r",
											"}\r",
											"else if(((shaVariant.lastIndexOf(\"SHA3-\",0)===0)||(shaVariant.lastIndexOf(\"SHAKE\",0)===0))&&\r",
											"((8&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"var delimiter=0x06;\r",
											"roundFunc=roundSHA3;\r",
											"stateCloneFunc=function(state){return cloneSHA3State(state);};\r",
											"bigEndianMod=1;\r",
											"if(\"SHA3-224\"===shaVariant)\r",
											"{\r",
											"variantBlockSize=1152;\r",
											"outputBinLen=224;\r",
											"}\r",
											"else if(\"SHA3-256\"===shaVariant)\r",
											"{\r",
											"variantBlockSize=1088;\r",
											"outputBinLen=256;\r",
											"}\r",
											"else if(\"SHA3-384\"===shaVariant)\r",
											"{\r",
											"variantBlockSize=832;\r",
											"outputBinLen=384;\r",
											"}\r",
											"else if(\"SHA3-512\"===shaVariant)\r",
											"{\r",
											"variantBlockSize=576;\r",
											"outputBinLen=512;\r",
											"}\r",
											"else if(\"SHAKE128\"===shaVariant)\r",
											"{\r",
											"variantBlockSize=1344;\r",
											"outputBinLen=-1;\r",
											"delimiter=0x1F;\r",
											"isSHAKE=true;\r",
											"}\r",
											"else if(\"SHAKE256\"===shaVariant)\r",
											"{\r",
											"variantBlockSize=1088;\r",
											"outputBinLen=-1;\r",
											"delimiter=0x1F;\r",
											"isSHAKE=true;\r",
											"}\r",
											"else\r",
											"{\r",
											"throw new Error(\"Chosen SHA variant is not supported \"+shaVariant);\r",
											"}\r",
											"finalizeFunc=function(remainder,remainderBinLen,processedBinLen,state,outputLen)\r",
											"{\r",
											"return finalizeSHA3(remainder,remainderBinLen,processedBinLen,state,variantBlockSize,delimiter,outputLen);\r",
											"};\r",
											"}\r",
											"else\r",
											"{\r",
											"throw new Error(\"Chosen SHA varwwwiant is not supported \"+shaVariant);\r",
											"}\r",
											"converterFunc=getStrConverter(inputFormat,utfType,bigEndianMod);\r",
											"intermediateState=getNewState(shaVariant);\r",
											"this.setHMACKey=function(key,inputFormat,options)\r",
											"{\r",
											"var keyConverterFunc,convertRet,keyBinLen,keyToUse,blockByteSize,\r",
											"i,lastArrayIndex,keyOptions;\r",
											"if(true===hmacKeySet)\r",
											"{\r",
											"throw new Error(\"HMAC key already set\");\r",
											"}\r",
											"if(true===updatedCalled)\r",
											"{\r",
											"throw new Error(\"Cannot set HMAC key after calling update\");\r",
											"}\r",
											"if((isSHAKE===true)&&((8&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"throw new Error(\"SHAKE is not supported for HMAC\");\r",
											"}\r",
											"keyOptions=options||{};\r",
											"utfType=keyOptions[\"encoding\"]||\"UTF8\";\r",
											"keyConverterFunc=getStrConverter(inputFormat,utfType,bigEndianMod);\r",
											"convertRet=keyConverterFunc(key);\r",
											"keyBinLen=convertRet[\"binLen\"];\r",
											"keyToUse=convertRet[\"value\"];\r",
											"blockByteSize=variantBlockSize>>>3;\r",
											"lastArrayIndex=(blockByteSize/4)-1;\r",
											"if(blockByteSize<(keyBinLen/8))\r",
											"{\r",
											"keyToUse=finalizeFunc(keyToUse,keyBinLen,0,getNewState(shaVariant),outputBinLen);\r",
											"while(keyToUse.length<=lastArrayIndex)\r",
											"{\r",
											"keyToUse.push(0);\r",
											"}\r",
											"keyToUse[lastArrayIndex]&=0xFFFFFF00;\r",
											"}\r",
											"else if(blockByteSize>(keyBinLen/8))\r",
											"{\r",
											"while(keyToUse.length<=lastArrayIndex)\r",
											"{\r",
											"keyToUse.push(0);\r",
											"}\r",
											"keyToUse[lastArrayIndex]&=0xFFFFFF00;\r",
											"}\r",
											"for(i=0;i<=lastArrayIndex;i+=1)\r",
											"{\r",
											"keyWithIPad[i]=keyToUse[i]^0x36363636;\r",
											"keyWithOPad[i]=keyToUse[i]^0x5C5C5C5C;\r",
											"}\r",
											"intermediateState=roundFunc(keyWithIPad,intermediateState);\r",
											"processedLen=variantBlockSize;\r",
											"hmacKeySet=true;\r",
											"};\r",
											"this.update=function(srcString)\r",
											"{\r",
											"var convertRet,chunkBinLen,chunkIntLen,chunk,i,updateProcessedLen=0,\r",
											"variantBlockIntInc=variantBlockSize>>>5;\r",
											"convertRet=converterFunc(srcString,remainder,remainderLen);\r",
											"chunkBinLen=convertRet[\"binLen\"];\r",
											"chunk=convertRet[\"value\"];\r",
											"chunkIntLen=chunkBinLen>>>5;\r",
											"for(i=0;i<chunkIntLen;i+=variantBlockIntInc)\r",
											"{\r",
											"if(updateProcessedLen+variantBlockSize<=chunkBinLen)\r",
											"{\r",
											"intermediateState=roundFunc(\r",
											"chunk.slice(i,i+variantBlockIntInc),\r",
											"intermediateState\r",
											");\r",
											"updateProcessedLen+=variantBlockSize;\r",
											"}\r",
											"}\r",
											"processedLen+=updateProcessedLen;\r",
											"remainder=chunk.slice(updateProcessedLen>>>5);\r",
											"remainderLen=chunkBinLen%variantBlockSize;\r",
											"updatedCalled=true;\r",
											"};\r",
											"this.getHash=function(format,options)\r",
											"{\r",
											"var formatFunc,i,outputOptions,finalizedState;\r",
											"if(true===hmacKeySet)\r",
											"{\r",
											"throw new Error(\"Cannot call getHash after setting HMAC key\");\r",
											"}\r",
											"outputOptions=getOutputOpts(options);\r",
											"if((isSHAKE===true)&&((8&SUPPORTED_ALGS)!==0))\r",
											"{\r",
											"if(outputOptions[\"shakeLen\"]===-1)\r",
											"{\r",
											"throw new Error(\"shakeLen must be specified in options\");\r",
											"}\r",
											"outputBinLen=outputOptions[\"shakeLen\"];\r",
											"}\r",
											"switch(format)\r",
											"{\r",
											"case\"HEX\":\r",
											"formatFunc=function(binarray){return packed2hex(binarray,outputBinLen,bigEndianMod,outputOptions);};\r",
											"break;\r",
											"case\"B64\":\r",
											"formatFunc=function(binarray){return packed2b64(binarray,outputBinLen,bigEndianMod,outputOptions);};\r",
											"break;\r",
											"case\"BYTES\":\r",
											"formatFunc=function(binarray){return packed2bytes(binarray,outputBinLen,bigEndianMod);};\r",
											"break;\r",
											"case\"ARRAYBUFFER\":\r",
											"try{\r",
											"i=new ArrayBuffer(0);\r",
											"}catch(ignore){\r",
											"throw new Error(\"ARRAYBUFFER not supported by this environment\");\r",
											"}\r",
											"formatFunc=function(binarray){return packed2arraybuffer(binarray,outputBinLen,bigEndianMod);};\r",
											"break;\r",
											"default:\r",
											"throw new Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");\r",
											"}\r",
											"finalizedState=finalizeFunc(remainder.slice(),remainderLen,processedLen,stateCloneFunc(intermediateState),outputBinLen);\r",
											"for(i=1;i<numRounds;i+=1)\r",
											"{\r",
											"if(((8&SUPPORTED_ALGS)!==0)&&(isSHAKE===true)&&(outputBinLen%32!==0))\r",
											"{\r",
											"finalizedState[finalizedState.length-1]&=0x00FFFFFF>>>24-(outputBinLen%32);\r",
											"}\r",
											"finalizedState=finalizeFunc(finalizedState,outputBinLen,0,getNewState(shaVariant),outputBinLen);\r",
											"}\r",
											"return formatFunc(finalizedState);\r",
											"};\r",
											"this.getHMAC=function(format,options)\r",
											"{\r",
											"var formatFunc,firstHash,outputOptions,finalizedState;\r",
											"if(false===hmacKeySet)\r",
											"{\r",
											"throw new Error(\"Cannot call getHMAC without first setting HMAC key\");\r",
											"}\r",
											"outputOptions=getOutputOpts(options);\r",
											"switch(format)\r",
											"{\r",
											"case\"HEX\":\r",
											"formatFunc=function(binarray){return packed2hex(binarray,outputBinLen,bigEndianMod,outputOptions);};\r",
											"break;\r",
											"case\"B64\":\r",
											"formatFunc=function(binarray){return packed2b64(binarray,outputBinLen,bigEndianMod,outputOptions);};\r",
											"break;\r",
											"case\"BYTES\":\r",
											"formatFunc=function(binarray){return packed2bytes(binarray,outputBinLen,bigEndianMod);};\r",
											"break;\r",
											"case\"ARRAYBUFFER\":\r",
											"try{\r",
											"formatFunc=new ArrayBuffer(0);\r",
											"}catch(ignore){\r",
											"throw new Error(\"ARRAYBUFFER not supported by this environment\");\r",
											"}\r",
											"formatFunc=function(binarray){return packed2arraybuffer(binarray,outputBinLen,bigEndianMod);};\r",
											"break;\r",
											"default:\r",
											"throw new Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\r",
											"}\r",
											"firstHash=finalizeFunc(remainder.slice(),remainderLen,processedLen,stateCloneFunc(intermediateState),outputBinLen);\r",
											"finalizedState=roundFunc(keyWithOPad,getNewState(shaVariant));\r",
											"finalizedState=finalizeFunc(firstHash,outputBinLen,variantBlockSize,finalizedState,outputBinLen);\r",
											"return formatFunc(finalizedState);\r",
											"};\r",
											"};\r",
											"if((\"function\"===typeof define)&&(define[\"amd\"]))\r",
											"{\r",
											"define(function()\r",
											"{\r",
											"return jsSHA;\r",
											"});\r",
											"}else if(\"undefined\"!==typeof exports)\r",
											"{\r",
											"if((\"undefined\"!==typeof module)&&module[\"exports\"])\r",
											"{\r",
											"module[\"exports\"]=jsSHA;\r",
											"exports=jsSHA;\r",
											"}\r",
											"else{\r",
											"exports=jsSHA;\r",
											"}\r",
											"}else{\r",
											"global[\"jsSHA\"]=jsSHA;\r",
											"}\r",
											"}(X));\r",
											"TOTP=function(){\r",
											"var dec2hex=function(s){\r",
											"return(s<15.5?\"0\":\"\")+Math.round(s).toString(16);\r",
											"};\r",
											"var hex2dec=function(s){\r",
											"return parseInt(s,16);\r",
											"};\r",
											"var leftpad=function(s,l,p){\r",
											"if(l+1>=s.length){\r",
											"s=Array(l+1-s.length).join(p)+s;\r",
											"}\r",
											"return s;\r",
											"};\r",
											"var base32tohex=function(base32){\r",
											"var base32chars=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\r",
											"var bits=\"\";\r",
											"var hex=\"\";\r",
											"for(var i=0;i<base32.length;i++){\r",
											"var val=base32chars.indexOf(base32.charAt(i).toUpperCase());\r",
											"bits+=leftpad(val.toString(2),5,'0');\r",
											"}\r",
											"for(var i=0;i+4<=bits.length;i+=4){\r",
											"var chunk=bits.substr(i,4);\r",
											"hex=hex+parseInt(chunk,2).toString(16);\r",
											"}\r",
											"return hex;\r",
											"};\r",
											"this.getOTP=function(secret){\r",
											"try{\r",
											"var key=base32tohex(secret);\r",
											"var epoch=Math.round(new Date().getTime()/1000.0);\r",
											"var time=leftpad(dec2hex(Math.floor(epoch/30)),16,\"0\");\r",
											"var shaObj=new X.jsSHA(\"SHA-1\",\"HEX\");\r",
											"shaObj.setHMACKey(key,\"HEX\");\r",
											"shaObj.update(time);\r",
											"var hmac=shaObj.getHMAC(\"HEX\");\r",
											"var offset=hex2dec(hmac.substring(hmac.length-1));\r",
											"var otp=(hex2dec(hmac.substr(offset*2,8))&hex2dec(\"7fffffff\"))+\"\";\r",
											"otp=(otp).substr(otp.length-6,6);\r",
											"}catch(error){\r",
											"throw error;\r",
											"}\r",
											"return otp;\r",
											"};\r",
											"}\r",
											"\r",
											"// I don't know why, but \"SECRE\" is the correct value to send\r",
											"// to TOTP generator for the secret key \"secret\"\r",
											"pm.globals.set(\"rvg_totp_token\",new TOTP().getOTP(\"SECRE\"));\r",
											"console.log(new TOTP().getOTP(\"SECRE\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"{{rvg_totp_token}}\",\n  \"wildcard\": \"545\",\n  \"token\": \"{{rvg_2fa_validate}}\",\n  \"rememberMe\":true\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/auth/2fa",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"auth",
										"2fa"
									]
								}
							},
							"response": []
						},
						{
							"name": "/auth/2fa/remember_me",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf231355-5b01-493c-90da-ef465b59ade1",
										"exec": [
											"pm.globals.set(\"token\", \"Bearer \" + pm.response.json().jwt);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"token\": \"{{rvg_2fa_remember_me}}\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/auth/2fa/remember_me",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"auth",
										"2fa",
										"remember_me"
									]
								}
							},
							"response": []
						},
						{
							"name": "/auth/2fa/secret",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"setupToken\": \"KUQMF2226SAJO6CZATYFIEI2UH6WDYUBWOUQ\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/auth/2fa/secret",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"auth",
										"2fa",
										"secret"
									]
								}
							},
							"response": []
						},
						{
							"name": "/auth/2fa/verify",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"code\": \"068160\",\r\n  \"token\": \"KUQMF2226SAJO6CZATYFIEI2UH6WDYUBWOUQ\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/auth/2fa/verify",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"auth",
										"2fa",
										"verify"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "/auth/register/entrepreneur",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "captcha_response",
								"value": "captcha",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"registrationToken\": \"token\",\r\n  \"address\": \"string\",\r\n  \"city\": \"string\",\r\n  \"countryForTaxation\": \"RS\",\r\n  \"countryOfResidence\": \"BB\",\r\n  \"email\": \"ognjen.vlajic@realmarket.io\",\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"password\": \"testPASS123\",\r\n  \"phoneNumber\": \"02122333\",\r\n  \"userRole\": \"ROLE_ENTREPRENEUR\",\r\n  \"username\": \"user\"\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/auth/register/entrepreneur",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth",
								"register",
								"entrepreneur"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/register/individualInvestor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "captcha_response",
								"type": "text",
								"value": "captcha"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"string\",\r\n  \"city\": \"string\",\r\n  \"countryForTaxation\": \"RS\",\r\n  \"countryOfResidence\": \"BB\",\r\n  \"email\": \"ognjen.vlajic@realmarket.io\",\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"password\": \"testPASS123\",\r\n  \"phoneNumber\": \"02122333\",\r\n  \"username\": \"user2\"\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/auth/register/individualInvestor",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth",
								"register",
								"individualInvestor"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/register/corporateInvestor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "captcha_response",
								"value": "captcha",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": \"string\",\r\n  \"city\": \"string\",\r\n  \"countryForTaxation\": \"RS\",\r\n  \"countryOfResidence\": \"BB\",\r\n  \"email\": \"ognjen.vlajic@realmarket.io\",\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"password\": \"testPASS123\",\r\n  \"phoneNumber\": \"02122333\",\r\n  \"username\": \"user3\",\r\n  \"companyName\": \"company\",\r\n  \"companyIdentificationNumber\": \"123456890\"\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/auth/register/corporateInvestor",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth",
								"register",
								"corporateInvestor"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6f87413-5ef9-4f26-b65a-8bbfead76a5b",
								"exec": [
									"pmr = pm.response.json();",
									"",
									"pm.globals.set(\"rvg_2fa_validate\", pm.response.json().token);",
									"",
									"if (pmr.twoFAStatus == \"REMEMBER_ME\") {",
									"    pm.globals.set(\"rvg_2fa_remember_me\", pm.response.json().token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"testPASS123\",\r\n  \"username\": \"adonis\"\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/auth",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{server_ip}}/api/auth",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/confirm_registration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"token\": \"O25CGZL3FXAT7GTG7RN5KWKA6LMIRDBHSY4Q\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/auth/confirm_registration",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth",
								"confirm_registration"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/email_confirm",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"token\": \"9bdd3390-7206-4838-8aef-ce685c6eb89e\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/auth/email_confirm",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth",
								"email_confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/reset_password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"user\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/auth/reset_password",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth",
								"reset_password"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/reset_password",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secret\": \"user\",\n\t\"token\": \"token\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/auth/reset_password",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth",
								"reset_password"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/recover_username",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"user\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/auth/recover_username",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth",
								"recover_username"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/register/validateToken",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/auth/register/validateToken?tokenValue=token",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"auth",
								"register",
								"validateToken"
							],
							"query": [
								{
									"key": "tokenValue",
									"value": "token"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "file",
			"item": [
				{
					"name": "/files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96a11ec1-349a-43e8-9667-3e9f56612e45",
								"exec": [
									"pm.environment.set(\"file_name\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Ognjen Vlajic/Desktop/2fa.txt"
								}
							]
						},
						"url": {
							"raw": "{{server_ip}}/api/files",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"files"
							]
						}
					},
					"response": []
				},
				{
					"name": "/files/{file_name}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secret\": \"user\",\n\t\"token\": \"token\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/files/{{file_name}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"files",
								"{{file_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/files/{file_name}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a690c59-9582-4b2c-8583-57db79a98e96",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secret\": \"user\",\n\t\"token\": \"token\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/files/{{file_name}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"files",
								"{{file_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/files/public{file_name}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secret\": \"user\",\n\t\"token\": \"token\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/files/public/4FTWF54RA4RR4XYSVDYEOJCTXP52QIEN.PNG",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"files",
								"public",
								"4FTWF54RA4RR4XYSVDYEOJCTXP52QIEN.PNG"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "docs",
					"item": [
						{
							"name": "/documents",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accessLevel\": \"PLATFORM_ADMINS\",\r\n  \"title\": \"FIRSTDOCUMENT\",\r\n  \"type\": \"PERSONAL_ID_FRONT\",\r\n  \"url\": \"ZPQADB52R24TBD3ECEI2Z3YZKE5WZ4BO.txt\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/users/documents",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"users",
										"documents"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "/users/{auth_id}/secret",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"twoFaCode\": \"599834\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/secret",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"secret"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}/secret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\":\"testPASS123\",\n\t\"twoFa\": {\n\t\t\"code\":\"059349\",\n\t\t\"wildcard\":\"wildcard\"\n\t}\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/secret",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"secret"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}/recovery_code",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"267096\",\n\t\"wildcard\": \"NFRYYXJR7MMA\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/recovery_code",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"recovery_code"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}/email",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\": \"302619\",\n\t\"wildcard\":\"\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/email",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"email"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}/email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"dragan.rakita@realmarket.io\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/email",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"email"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}/picture",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/picture",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"picture"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}/picture",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/picture",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"picture"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}/picture",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "picture",
									"value": "",
									"type": "file",
									"disabled": true
								},
								{
									"key": "Authorization",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyMiIsImlzcyI6InJlYWxtYXJrZXQuaW8iLCJpYXQiOjE1NDk5ODM0NzZ9.k9Ft-K01MmvvrFAMyNbnjxsWZykLaJ-XVUTVx9W_jNChAgOvWn6zkQUI3HTs4beUNqRqDHGPN2NW3gEnzWNHVg",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/picture",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"picture"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}/password",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"code\":\"879147\",\n\t\"wildcard\":\"\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/password",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}/password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"newPassword\": \"testPASS123\",\n\t\"oldPassword\": \"testPASS1234\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/password",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"address\": \"testdwdwwdwdwdttt\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{auth_id}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{{auth_id}}/companyDocuments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/companyDocuments",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"companyDocuments"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{{auth_id}}/campaignDocuments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/campaignDocuments",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"campaignDocuments"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users/{{auth_id}}/pageableCampaignDocuments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/users/{{auth_id}}/pageableCampaignDocuments?page=0&size=1",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"users",
								"{{auth_id}}",
								"pageableCampaignDocuments"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "investments",
			"item": [
				{
					"name": "/investments/{{investID}}",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/investments/{{investID}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"investments",
								"{{investID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/investments/{{investID}}/ownerApprove",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/investments/{{investID}}/ownerApprove",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"investments",
								"{{investID}}",
								"ownerApprove"
							]
						}
					},
					"response": []
				},
				{
					"name": "/investments/{{investID}}/ownerReject",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/investments/{{investID}}/ownerReject",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"investments",
								"{{investID}}",
								"ownerReject"
							]
						}
					},
					"response": []
				},
				{
					"name": "/investments/{{investID}}/auditorApprove",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/investments/{{investID}}/auditorApprove",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"investments",
								"{{investID}}",
								"auditorApprove"
							]
						}
					},
					"response": []
				},
				{
					"name": "/investments/{{investID}}/auditorReject",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/investments/{{investID}}/auditorReject",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"investments",
								"{{investID}}",
								"auditorReject"
							]
						}
					},
					"response": []
				},
				{
					"name": "/investments/offPlatform/{{campaign_investable_urlFriendlyName}}",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"radovan.turovic@realmarket.io\",\n\t\"firstName\": \"Несрећко\",\n\t\"lastName\": \"Шошкић\",\n\t\"countryOfResidence\": \"RS\",\n\t\"countryForTaxation\": \"RS\",\n\t\"city\": \"Доње Бријање\",\n\t\"address\": \"Доње Бријање 7\",\n\t\"phoneNumber\": \"+381606060606\",\n\t\"profilePictureUrl\": \"https://static.juznasrbija.info/files/donje_brijanje-6a063e2cdb5d.jpg\",\n\t\"investedAmount\": \"16206\",\n\t\"twitterUrl\": \"https://twitter.com/twichtwichtwich\",\n\t\"linkedinUrl\": \"https://linkedin.com/linklinklinkininin\",\n\t\"facebookUrl\": \"https://facebook.com/facefacefacekacekacekace\",\n\t\"customProfileUrl\": \"https://myspace.com/kojosovocudokoristikojosovocudokoristikojosovocudokoristi\",\n\t\"shortBiography\": \"Dodjos iz lalinskog sreza.\",\n\t\"nationalIdentificationNumber\":\"1234567890123\",\n\t\"companyIdentificationNumber\":\"123412341234\",\n\t\"companyName\":\"BeatitudiNEMam\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/investments/offPlatform/{{campaign_investable_urlFriendlyName}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"investments",
								"offPlatform",
								"{{campaign_investable_urlFriendlyName}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "audits",
			"item": [
				{
					"name": "/audits",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"auditorId\": 7,\n    \"campaignUrlFriendlyName\": \"friendlyName6\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/audits",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"audits"
							]
						}
					},
					"response": []
				},
				{
					"name": "/audits/{{audit_id}}/accept",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/audits/{{audit_id}}/accept",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"audits",
								"{{audit_id}}",
								"accept"
							]
						}
					},
					"response": []
				},
				{
					"name": "/audits/{{audit_id}}/decline",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"We want you to succeed! Idea seems really good but needs some improvement. Please look at these to get you going: https://www.youtube.com/watch?v=Njh3rKoGKBo, https://www.youtube.com/watch?v=IQfZPsCVbTU and a little motivational gift https://www.youtube.com/watch?v=6b5tyITSTPQ.\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/audits/{{audit_id}}/decline",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"audits",
								"{{audit_id}}",
								"decline"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "fundraising_proposals",
			"item": [
				{
					"name": "docs",
					"item": [
						{
							"name": "/documents",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "*/*, application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"FIRSTPROPOSALDOCUMENT\",\r\n  \"type\": \"PITCH_DECK\",\r\n  \"url\": \"X5BHXYEBWT55IRI63NDLOELTN5WYFM6Z.txt\"\r\n}"
								},
								"url": {
									"raw": "{{server_ip}}/api/fundraisingProposals/{{proposal_id}}/documents",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"fundraisingProposals",
										"{{proposal_id}}",
										"documents"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/fundraisingProposals/{{proposal_id}}/documents",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"fundraisingProposals",
										"{{proposal_id}}",
										"documents"
									]
								}
							},
							"response": []
						},
						{
							"name": "/documents/types",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*, application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server_ip}}/api/fundraisingProposals/documents/types",
									"host": [
										"{{server_ip}}"
									],
									"path": [
										"api",
										"fundraisingProposals",
										"documents",
										"types"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "/fundraisingProposals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "captcha_response",
								"value": "captcha",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"firstName\": \"Мићо\",\r\n\t\"lastName\": \"Јовић\",\r\n\t\"companyName\": \"Бачка тамница\",\r\n\t\"taxIdentifier\": \"1212122\",\r\n\t\"companyIdentificationNumber\": \"43443443434\",\r\n\t\"website\": \"https://trs.ai\",\r\n\t\"email\": \"gazda@trs.ai\",\r\n\t\"phoneNumber\": \"+381212233369\",\r\n\t\"previouslyRaised\": \"-25.00\",\r\n\t\"fundingGoals\":\"1000000\"\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/fundraisingProposals",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"fundraisingProposals"
							]
						}
					},
					"response": []
				},
				{
					"name": "/fundraisingProposals/{{proposal_id}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/fundraisingProposals/{{proposal_id}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"fundraisingProposals",
								"{{proposal_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/fundraisingProposals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/fundraisingProposals?page=0&size=2&filter=pending",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"fundraisingProposals"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "2"
								},
								{
									"key": "filter",
									"value": "pending"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/fundraisingProposals/{{proposal_id}}/accept",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/fundraisingProposals/{{proposal_id}}/accept",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"fundraisingProposals",
								"{{proposal_id}}",
								"accept"
							]
						}
					},
					"response": []
				},
				{
					"name": "/fundraisingProposals/{{proposal_id}}/reject",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"We want you to succeed! Idea seems really good but needs some improvement. Please look at these to get you going: https://www.youtube.com/watch?v=Njh3rKoGKBo, https://www.youtube.com/watch?v=IQfZPsCVbTU and a little motivational gift https://www.youtube.com/watch?v=6b5tyITSTPQ.\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/fundraisingProposals/{{proposal_id}}/reject",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"fundraisingProposals",
								"{{proposal_id}}",
								"reject"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "kyc",
			"item": [
				{
					"name": "/kyc/user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"documents\": [\n\t\t{\"name\": \"userKYCFront\", \"type\": \"USER_KYC\", \"url\": \"TB63FMPVP7PGX4WX3HDXRWMBNUS2H7AW.PNG\"},\n\t\t{\"name\": \"userKYCFront\", \"type\": \"USER_KYC\", \"url\": \"TB63FMPVP7PGX4WX3HDXRWMBNUS2H7AW.PNG\"},\n\t\t{\"name\": \"corporateInvestorKYC\", \"type\": \"CORPORATE_INVESTOR_KYC\", \"url\": \"TB63FMPVP7PGX4WX3HDXRWMBNUS2H7AW.PNG\"}],\n\t\"politicallyExposed\": true\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/kyc/user",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"kyc",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/kyc/user/assign",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"auditorId\": \"5\",\n\t\"userKYCId\": \"1\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/kyc/user/assign",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"kyc",
								"user",
								"assign"
							]
						}
					},
					"response": []
				},
				{
					"name": "/kyc/users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/kyc/users?page=0&size=3&state=pendingAssigned&role=role_entrepreneur",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"kyc",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "3"
								},
								{
									"key": "state",
									"value": "pendingAssigned"
								},
								{
									"key": "role",
									"value": "role_entrepreneur"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/kyc/user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/kyc/user",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"kyc",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/kyc/user/{{userKYC_Id}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/kyc/user/{{userKYC_Id}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"kyc",
								"user",
								"{{userKYC_Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/kyc/user/{{userKYC_Id}}/approve",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/kyc/user/{{userKYC_Id}}/accept",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"kyc",
								"user",
								"{{userKYC_Id}}",
								"accept"
							]
						}
					},
					"response": []
				},
				{
					"name": "/kyc/user/{{userKYC_Id}}/reject",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"Personal ID is expired. Police is notified.\"\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/kyc/user/{{userKYC_Id}}/reject",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"kyc",
								"user",
								"{{userKYC_Id}}",
								"reject"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "digital_signature",
			"item": [
				{
					"name": "/digitalSignatures",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"publicKey\": \"eyJjcnYiOiJQLTM4NCIsImV4dCI6dHJ1ZSwia2V5X29wcyI6WyJ2ZXJpZnkiXSwia3R5IjoiRUMiLCJ4IjoiaTd6OEU4c3pDRTZYMDZydkxtT0ZsZ2gtcGpGcXlmaV9DaHVVYnR5MjNGLTNTaUhPRmdRVVBoZTFCOW85T0FrcCIsInkiOiIzOFk3bmpiVEZFMlNBekRQdjYtd0VwTkxVUVZlMDVVQnBlaHk3ZG5NSUpGOXMwazRtNVdlaTZ0TFU2bUJWSDV0In0=\",\r\n\"encryptedPrivateKey\": \"spWkI+t/Gbmk64qWXrP1na+eZIhJqDI/N4UbbyKB0h2znlRqwKhawtImNFNubft7HdgTClDVmm5WQnwu1yA02eObgTYb4zrsnDUNLXaXYcXP2EtHMrZpqN+Rn7Uc1y9JtKQNlS3AK+/SJoluy+XiSA3PkC6UuxkiT4TG51wBLO5EwoxpxVWArCfNr2PHznva6TgKdj1BPGcn0jtTTGeKh6kl1QPW9OXMIdHLiZ9t4EFYFFR86wOHLEyqesi7rGmI34nbNOnGqkG8cVcazeEMUsisdyXgsl/VucSgxmv/Id+sYLPXwx+MG5U6TiNUSqx/Nqkjgc5uJCvXKcQdnae+8jJX9NuOxipqwRP8xbf4PEO0ktrzqi9+UdAHsB/G\",\r\n\"initialVector\": \"CZ2D1EwDdabpXFJB\",\r\n\"salt\": \"dGVkV2wQaxRYvbtbdoA8E5wFgSNGTzzFAUNj1BEgyyM=\",\r\n\"passLength\": 6\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/digitalSignatures",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"digitalSignatures"
							]
						}
					},
					"response": []
				},
				{
					"name": "/digitalSignatures/mine",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/digitalSignatures/mine",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"digitalSignatures",
								"mine"
							]
						}
					},
					"response": []
				},
				{
					"name": "/digitalSignatures/{{auth_id}}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/digitalSignatures/{{auth_id}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"digitalSignatures",
								"{{auth_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "payments",
			"item": [
				{
					"name": "/payments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/payments?size=10&page=0&filter=paid",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"payments"
							],
							"query": [
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "filter",
									"value": "paid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/payments/{{investment_id}}/methods",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/payments/{{investment_id}}/methods",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"payments",
								"{{investment_id}}",
								"methods"
							]
						}
					},
					"response": []
				},
				{
					"name": "/payments/{{investment_id}}/bankTransfer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/payments/{{investment_id}}/bankTransfer",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"payments",
								"{{investment_id}}",
								"bankTransfer"
							]
						}
					},
					"response": []
				},
				{
					"name": "/payments{{investment_id}}/bankTransfer/confirm",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"documentTitle\": \"PAYMENTDOCUMENT\",\r\n  \"documentUrl\": \"KCEQ2HMXQSZ5BVKOJ7PQJW34PS6OTCBK.PNG\",\r\n  \"paymentDate\": \"2019-08-28\"\r\n}"
						},
						"url": {
							"raw": "{{server_ip}}/api/payments/{{investment_id}}/bankTransfer/confirm",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"payments",
								"{{investment_id}}",
								"bankTransfer",
								"confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "/payments/{{investment_id}}/payPal/{{paypal_order_id}}",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{server_ip}}/api/payments/{{investment_id}}/payPal/{{paypal_order_id}}",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"payments",
								"{{investment_id}}",
								"payPal",
								"{{paypal_order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/payments/{{investment_id}}/proformaInvoice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/payments/{{investment_id}}/proformaInvoice",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"payments",
								"{{investment_id}}",
								"proformaInvoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "/payments/{{investment_id}}/invoice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/payments/{{investment_id}}/invoice",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"payments",
								"{{investment_id}}",
								"invoice"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "/settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/settings",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "/settings/countries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/settings/countries",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"settings",
								"countries"
							]
						}
					},
					"response": []
				},
				{
					"name": "/settings/currency",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/settings/currency",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"settings",
								"currency"
							]
						}
					},
					"response": []
				},
				{
					"name": "/settings/minimumInvestment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*, application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/settings/minimumInvestment",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"settings",
								"minimumInvestment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "contracts",
			"item": [
				{
					"name": "/contracts/dummy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server_ip}}/api/contracts/dummy",
							"host": [
								"{{server_ip}}"
							],
							"path": [
								"api",
								"contracts",
								"dummy"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}